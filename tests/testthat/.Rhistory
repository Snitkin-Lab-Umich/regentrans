load_all()
library(ape)
library(dplyr)
library(devtools)
load_all()
test_locs <- locs[1:4]
test_locs_2 <- locs[5:8]
test_locs_3 <- locs[1:3]
test_locs_4 <- locs[1]
test_pt <- pt[1:4]
test_pt_2 <- pt[5:8]
test_pt_3 <- pt[1:3]
test_dists <- dists[names(test_locs), names(test_locs)]
test_dists_2 <- dists[names(test_locs_3), names(test_locs_3)]
test_snv_dists <- get_snv_dists(dists = test_dists, locs = test_locs, pt = test_pt)
test_snv_dists_2 <- test_snv_dists[,2:ncol(test_snv_dists)]
test_snv_dists_3 <- test_snv_dists
colnames(test_snv_dists_3) <- c("A", "B", "C", "D", "E", "F", "G", "H")
test_snv_dists_4 <- test_snv_dists
test_snv_dists_4$Pairwise_Dists <- as.character(test_snv_dists_4$Pairwise_Dists)
test_tr <- keep.tip(tr,names(test_pt))
test_tr_2 <- keep.tip(tr,names(test_pt_3))
test_fasta <- fasta[names(test_locs),]
is.null(check_get_snv_dists_input(test_dists, test_locs, test_pt))
test_fasta
test_locs
test_locs_2
test_locs_5 <- locs[1:10]
test_locs_5
test_locs_5 <- locs[locs %in% c("A", "B")]
test_locs_5
test_locs_5 <- locs[locs %in% c("A", "C")]
test_locs_5
test_locs_5 <- locs[locs %in% c("A", "D")]
test_locs_5
test_locs_5 <- locs[locs %in% c("A", "E")]
test_locs_5
table(locs)
test_locs_5 <- locs[locs %in% c("A", "F", "H")]
test_locs_5
test_fasta <- fasta[names(test_locs_5),]
test_fasta
is.null(check_facility_fsp_input(fasta = test_fasta, locs = test_locs_5, form = "matrix"))
check_facility_fsp_input(fasta = test_fasta, locs = test_locs, form = "hi")
check_facility_fsp_input(fasta = test_fasta, locs = test_locs, form = 12)
is.null(check_facility_fsp_input(fasta = test_fasta_2, locs = test_locs_5, form = "long"))
test_fasta_2 <- fasta[names(test_locs_5),]
test_fasta <- fasta[names(test_locs),]
is.null(check_facility_fsp_input(fasta = test_fasta_2, locs = test_locs_5, form = "long"))
check_facility_fsp_input(fasta = "test_fasta", locs = test_locs, form = "matrix")
test_fasta_2
test_locs_2
test_locs_3
check_facility_fsp_input(fasta = test_fasta_2, locs = test_locs_5, form = "matrix")
load_all()
check_facility_fsp_input(fasta = test_fasta_2, locs = test_locs_5, form = "matrix")
test_fasta_2
test_locs_5
test_locs_6 <- locs[1:4]
check_facility_fsp_input(fasta = test_fasta_2, locs = test_locs_6, form = "matrix")
test_locs_6
rownames(fasta_2)
rownames(test_fasta_2)
test_locs_6
test_locs_7 <- test_locs_5[1:4]
test_locs_7
check_facility_fsp_input(fasta = test_fasta_2, locs = test_locs_7, form = "matrix")
load_all()
check_facility_fsp_input(fasta = test_fasta_2, locs = test_locs_7, form = "matrix")
test_locs_5
test_locs_8 <- test_locs_5[2:6]
test_locs_8
check_facility_fsp_input(fasta = test_fasta_2, locs = test_locs_8, form = "matrix")
test_fasta_2
load_all()
check_facility_fsp_input(fasta = test_fasta_2, locs = test_locs_8, form = "matrix")
test_fasta
test_fasta_2
test_locs_7
test_locs_8
test_locs_9 <- test_locs_5[1:6]
test_locs_9
test_fasta_3 <- fasta[names(test_locs_9),]
test_fasta_3
check_facility_fsp_input(fasta = test_fasta_3, locs = test_locs_9, form = "matrix")
test_locs_9
test_fasta_3
load_all()
check_facility_fsp_input(fasta = test_fasta_3, locs = test_locs_9, form = "matrix")
test_locs_9
test_fasta_3 <- fasta[names(test_locs_9),]
check_facility_fsp_input(fasta = test_fasta_3, locs = test_locs_9, form = "matrix")
locs <- test_locs_9
fasta <- test_fasta_3
common_isolates <- intersect(rownames(fasta), names(locs))
common_isolates
length(common_isolates) <
2
(length(common_isolates) != length(locs))
(length(common_isolates) != nrow(fasta))
any(table(locs[locs %in% common_isolates])
< 1)
table(locs[locs %in% common_isolates])
locs[locs %in% common_isolates]
common_isolates
locs
names(locs) %in% common_isolates
locs[names(locs) %in% common_isolates]
table(locs[names(locs) %in% common_isolates])
any(table(locs[names(locs) %in% common_isolates]) < 1)
load_all()
check_facility_fsp_input(fasta = test_fasta_3, locs = test_locs_9, form = "matrix")
library(testthat)
library(regentrans)
test_check("regentrans")
?test_check
getwd()
test_check("/Users/sophiehoffman/Desktop/regentrans/")
test_check("/Users/sophiehoffman/Desktop/regentrans/tests")
test_check("/Users/sophiehoffman/Desktop/regentrans/tests/testthat")
test_check("/Users/sophiehoffman/Desktop/regentrans/tests/testthat/test-checks.R")
is.null(check_allele_freq_input(x = test_fasta, subset = NULL, allele_n = 1, alleles = c("a", "t")))
is.null(check_allele_freq_input(x = test_fasta, subset = c(TRUE, FALSE, TRUE), allele_n = 1, alleles = c("a", "t")))
check_allele_freq_input(x = "test_fasta", subset = NULL, allele_n = 1, alleles = c("a", "t"))
check_allele_freq_input(x = test_fasta, subset = "NULL", allele_n = 1, alleles = c("a", "t"))
check_allele_freq_input(x = test_fasta, subset = NULL, allele_n = 7, alleles = c("a", "t"))
check_allele_freq_input(x = test_fasta, subset = NULL, allele_n = "1", alleles = c("a", "t"))
class(allele_n)
class(1)
load_all()
check_allele_freq_input(x = test_fasta, subset = NULL, allele_n = "1", alleles = c("a", "t"))
load_all()
check_allele_freq_input(x = test_fasta, subset = NULL, allele_n = "1", alleles = c("a", "t"))
load_all()
check_allele_freq_input(x = test_fasta, subset = NULL, allele_n = "1", alleles = c("a", "t"))
check_allele_freq_input(x = test_fasta, subset = NULL, allele_n = 1, alleles = "t")
check_allele_freq_input(x = test_fasta, subset = NULL, allele_n = 1, alleles = c(1, "t"))
alleles = c("a", "t")
intersect(alleles, c("a", "c", "t", "g"))
length(intersect(alleles, c("a", "c", "t", "g"))) == 2
alleles = "t"
length(intersect(alleles, c("a", "c", "t", "g"))) == 2)
length(intersect(alleles, c("a", "c", "t", "g"))) == 2
alleles = c(1, "t")
length(intersect(alleles, c("a", "c", "t", "g"))) == 2
load_all()
check_allele_freq_input(x = test_fasta, subset = NULL, allele_n = 1, alleles = c(1, "t"))
check_allele_freq_input(x = test_fasta, subset = NULL, allele_n = 1, alleles = c("a","t","g"))
load_all()
check_allele_freq_input(x = test_fasta, subset = NULL, allele_n = 1, alleles = "t")
check_allele_freq_input(x = test_fasta, subset = NULL, allele_n = 1, alleles = c("a","t","g"))
load_all()
check_allele_freq_input(x = test_fasta, subset = NULL, allele_n = 1, alleles = c("a","t","g"))
paste(alleles, sep = " ", collapse = "")
paste(alleles, sep = " ", collapse = " ")
load_all()
check_allele_freq_input(x = test_fasta, subset = NULL, allele_n = 1, alleles = "t")
check_allele_freq_input(x = test_fasta, subset = NULL, allele_n = 1, alleles = c("a","t","g"))
check_allele_freq_input(x = test_fasta, subset = NULL, allele_n = 1, alleles = c(1, "t"))
is.null(within_pop_var_input_checks(subset_snp_mat = test_fasta, subset = c(TRUE, FALSE, FALSE)))
within_pop_var_input_checks(subset_snp_mat = test_fasta, subset = "TRUE")
within_pop_var_input_checks(subset_snp_mat = "test_fasta", subset = c(TRUE, FALSE, FALSE)
)
within_pop_var_input_checks(subset_snp_mat = "test_fasta", subset = c(TRUE, FALSE, FALSE))
load_all()
within_pop_var_input_checks(subset_snp_mat = "test_fasta", subset = c(TRUE, FALSE, FALSE))
as.list(c("hi", 1, 2, "jk"))
as.list("hi", 1, 2, "jk")
ls <- list(list(a = 2, b = 3), list(c = "a", d = "b"))
ls
ls[[1]]
ls[[2]]
is.null(check_reverse_list_str_input(ls))
check_reverse_list_str_input("ls")
check_reverse_list_str_input("ls")
load_all()
check_reverse_list_str_input("ls")
subset = "ls"
class(subset)
load_all()
load_all()
check_reverse_list_str_input("ls")
s
ls_2 <- list(list(a = 2, b = 3), list(c = "a", d = "b"), "x")
check_reverse_list_str_input(ls_2)
test_subtr <- ape::subtrees(test_tr)
test_subtr
test_pt
is.null(checl_subtrs(subtrs = test_subtr, isolate_labels = test_pt))
is.null(check_subtrs(subtrs = test_subtr, isolate_labels = test_pt))
check_subtrs(subtrs = "test_subtr", isolate_labels = test_pt)
check_subtrs(subtrs = ls, isolate_labels = test_pt)
check_subtrs(subtrs = test_subtr, isolate_labels = test_pt_2)
check_subtrs(subtrs = test_subtr, isolate_labels = "test_pt")
subtrs = test_subtr
isolate_labels <- test_pt
isolates <- ""
for(i in 1:length(subtrs)){
isolates <- c(isolates, subtrs[[i]]$tip.label)
}
isolates
intersect(isolates, names(isolate_labels))
isolate_labels
isolate_labels = "test_pt"
intersect(isolates, names(isolate_labels)))
intersect(isolates, names(isolate_labels))
length(intersect(isolates, names(isolate_labels)))
length(isolate_labels)
check_subtrs(subtrs = test_subtr, isolate_labels = "test_pt")
is.null(check_get_largest_subtree_input(subtrs = test_subtr, isolate_labels = test_pt))
is.null(check_get_largest_subtree_input(subtrs = test_subtr, isolate_labels = test_pt, control_labels = NULL, bootstrap = NULL, pureness = 1))
check_get_largest_subtree_input(subtrs = "test_subtr", isolate_labels = test_pt, control_labels = NULL, bootstrap = NULL, pureness = 1)
check_get_largest_subtree_input(subtrs = ls, isolate_labels = test_pt, control_labels = NULL, bootstrap = NULL, pureness = 1)
check_get_largest_subtree_input(subtrs = test_subtr, isolate_labels = "test_pt", control_labels = NULL, bootstrap = NULL, pureness = 1)
check_get_largest_subtree_input(subtrs = test_subtr, isolate_labels = test_pt_2, control_labels = NULL, bootstrap = NULL, pureness = 1)
check_get_largest_subtree_input(subtrs = test_subtr, isolate_labels = test_pt_3, control_labels = NULL, bootstrap = NULL, pureness = 1)
test_subtr_2 <- ape::subtrees(test_tr_2)
check_get_largest_subtree_input(subtrs = test_subtr_2, isolate_labels = test_pt, control_labels = NULL, bootstrap = NULL, pureness = 1)
check_get_largest_subtree_input(subtrs = test_subtr, isolate_labels = test_pt, control_labels = "NULL", bootstrap = NULL, pureness = 1)
check_get_largest_subtree_input(subtrs = test_subtr, isolate_labels = test_pt, control_labels = NULL, bootstrap = NULL, pureness = 1)
check_get_largest_subtree_input(subtrs = test_subtr, isolate_labels = test_pt, control_labels = "NULL", bootstrap = NULL, pureness = 1)
load_all()
library(ape)
library(dplyr)
library(devtools)
load_all()
test_locs <- locs[1:4]
test_locs_2 <- locs[5:8]
test_locs_3 <- locs[1:3]
test_locs_4 <- locs[1]
test_locs_5 <- locs[locs %in% c("A", "F", "H")]
test_locs_6 <- locs[1:4]
test_locs_7 <- test_locs_5[1:4]
test_locs_8 <- test_locs_5[2:6]
test_locs_9 <- test_locs_5[1:6]
test_pt <- pt[1:4]
test_pt_2 <- pt[5:8]
test_pt_3 <- pt[1:3]
test_dists <- dists[names(test_locs), names(test_locs)]
test_dists_2 <- dists[names(test_locs_3), names(test_locs_3)]
test_snv_dists <- get_snv_dists(dists = test_dists, locs = test_locs, pt = test_pt)
test_snv_dists_2 <- test_snv_dists[,2:ncol(test_snv_dists)]
test_snv_dists_3 <- test_snv_dists
colnames(test_snv_dists_3) <- c("A", "B", "C", "D", "E", "F", "G", "H")
test_snv_dists_4 <- test_snv_dists
test_snv_dists_4$Pairwise_Dists <- as.character(test_snv_dists_4$Pairwise_Dists)
test_tr <- keep.tip(tr,names(test_pt))
test_tr_2 <- keep.tip(tr,names(test_pt_3))
test_fasta <- fasta[names(test_locs),]
test_fasta_2 <- fasta[names(test_locs_5),]
test_fasta_3 <- fasta[names(test_locs_9),]
ls <- list(list(a = 2, b = 3), list(c = "a", d = "b"))
ls_2 <- list(list(a = 2, b = 3), list(c = "a", d = "b"), "x")
test_subtr <- ape::subtrees(test_tr)
test_subtr_2 <- ape::subtrees(test_tr_2)
check_get_largest_subtree_input(subtrs = test_subtr, isolate_labels = test_pt, control_labels = "NULL", bootstrap = NULL, pureness = 1)
test_subtr
subtrs = test_subtr
isolate_labels = test_pt
control_labels = "NULL"
bootstrap = NULL
pureness = 1
check_locs(isolate_labels)
check_subtrs(subtrs)
check_subtrs_vs_isolate_labs(subtrs, isolate_labels)
check_control_labels(control_labels)
check_subtrs_vs_isolate_labs(subtrs, control_labels)
isolates <- ""
for(i in 1:length(subtrs)){
isolates <- c(isolates, subtrs[[i]]$tip.label)
}
isolates
length(intersect(isolates, names(isolate_labels)))
length(isolate_labels)
length(intersect(isolates, names(isolate_labels))) != length(isolate_labels)
check_subtrs_vs_isolate_labs(subtrs, isolate_labels)
check_control_labels(control_labels)
load_all()
load_all()
check_subtrs_vs_isolate_labs(subtrs, control_labels)
load_all()
check_subtrs_vs_isolate_labs(subtrs, control_labels, "control_labels")
check_get_largest_subtree_input(subtrs = test_subtr, isolate_labels = test_pt, control_labels = "NULL", bootstrap = NULL, pureness = 1)
check_get_largest_subtree_input(subtrs = test_subtr_2, isolate_labels = test_pt, control_labels = NULL, bootstrap = NULL, pureness = 1)
check_get_largest_subtree_input(subtrs = test_subtr, isolate_labels = test_pt, control_labels = "NULL", bootstrap = NULL, pureness = "1")
check_get_largest_subtree_input(subtrs = test_subtr, isolate_labels = test_pt, control_labels = NULL, bootstrap = NULL, pureness = "1")
check_get_largest_subtree_input(subtrs = test_subtr, isolate_labels = test_pt, control_labels = NULL, bootstrap = NULL, pureness = 100)
check_get_largest_subtree_input(subtrs = test_subtr, isolate_labels = test_pt, control_labels = NULL, bootstrap = "NULL", pureness = 1)
check_get_largest_subtree_input(subtrs = test_subtr, isolate_labels = test_pt, control_labels = NULL, bootstrap = 1000, pureness = 1)
test_locs <- locs[1:4]
test_pt <- pt[1:4]
test_dists <- dists[names(test_locs), names(test_locs)]
#one with pt
test_snv_dists <- get_snv_dists(dists = test_dists, locs = test_locs, pt = test_pt)
#one without pt
test_snv_dist_no_pt <- get_snv_dists(dists = test_dists, locs = test_locs)
View(test_snv_dists)
ncol(test_snv_dists) == 8
(length(locs))^2
length(locs)
length(test_locs))^2
length(test_locs)
length(test_locs))^2
(length(test_locs)^2)
(length(test_locs)^2)-length(test_locs)
nrow(test_snv_dists) == (length(test_locs)^2)-length(test_locs)
colnames(locs)
colnames(tesst_snv_dists)
colnames(test_snv_dists)
all(colnames(locs) == c("Isolate1", "Isolate2", "Pairwise_Dists", "Loc1", "Loc2", "Patient1", "Patient2", "Pair_Type"))
sapply(test_snv_dists, class)
all(sapply(test_snv_dists, class) == c("factor", "factor", "numeric", "character", "integer", "integer", "character"))
all(sapply(test_snv_dists, class) == c("factor", "factor", "numeric", "character", "character", "integer", "integer", "character"))
all(unique(test_snv_dists$Loc1) == unique(test_snv_dists$Loc2) == names(test_locs))
all(unique(test_snv_dists$Loc1) == unique(test_snv_dists$Loc2) & unique(test_snv_dists$Loc2) == names(test_locs))
unique(test_snv_dists$Loc1) == unique(test_snv_dists$Loc2)
setequal(unique(test_snv_dists$Loc1), unique(test_snv_dists$Loc2))
setequal(unique(test_snv_dists$Loc1), unique( names(test_locs)))
test_snv_dists$Loc1
setequal(unique(test_snv_dists$Isolate2), unique( names(test_locs))
)
all(setequal(unique(test_snv_dists$Isolate1), unique(test_snv_dists$Isolate2)) & setequal(unique(test_snv_dists$Isolate2), unique(names(test_locs))))
all(setequal(unique(test_snv_dists$Patient1), unique(test_snv_dists$Patient2)) & setequal(unique(test_snv_dists$Patient2), unique(names(test_pt))))
unique(test_snv_dists$Patient2)
unique(names(test_pt))
all(setequal(unique(test_snv_dists$Patient1), unique(test_snv_dists$Patient2)) & setequal(unique(test_snv_dists$Patient2), unique(test_pt)))
all(setequal(unique(test_snv_dists$Loc1), unique(test_snv_dists$Loc2)) & setequal(unique(test_snv_dists$Loc2), unique(test_locs)))
as.character(test_pt)
as.character(pt[1:4])
test_pt <- as.character(pt[1:4])
names(test_pt) <- names(pt[1:4])
test_pt
#one with pt
test_snv_dists <- get_snv_dists(dists = test_dists, locs = test_locs, pt = test_pt)
#one without pt
test_snv_dist_no_pt <- get_snv_dists(dists = test_dists, locs = test_locs)
all(colnames(locs) == c("Isolate1", "Isolate2", "Pairwise_Dists", "Loc1", "Loc2", "Patient1", "Patient2", "Pair_Type"))
all(sapply(test_snv_dists, class) == c("factor", "factor", "numeric", "character", "character", "character", "character", "character"))
ncol(test_snv_dist_no_pt) == 6
nrow(test_snv_dist_no_pt) == (length(test_locs)^2)-length(test_locs)
nrow(test_snv_dist_no_pt)
View(test_snv_dist_no_pt)
load_all()
#one with pt
test_snv_dists <- get_snv_dists(dists = test_dists, locs = test_locs, pt = test_pt)
#one without pt
test_snv_dist_no_pt <- get_snv_dists(dists = test_dists, locs = test_locs)
nrow(test_snv_dist_no_pt) == (length(test_locs)^2)-length(test_locs)
all(colnames(locs) == c("Isolate1", "Isolate2", "Pairwise_Dists", "Loc1", "Loc2", "Pair_Type"))
all(sapply(test_snv_dists, class) == c("factor", "factor", "numeric", "character", "character", "character"))
all(colnames(test_snv_dists) == c("Isolate1", "Isolate2", "Pairwise_Dists", "Loc1", "Loc2", "Patient1", "Patient2", "Pair_Type"))
all(colnames(test_snv_dist_no_pt) == c("Isolate1", "Isolate2", "Pairwise_Dists", "Loc1", "Loc2", "Pair_Type"))
all(sapply(test_snv_dists, class) == c("factor", "factor", "numeric", "character", "character", "character"))
View(test_snv_dists)
all(sapply(test_snv_dist_no_pt, class) == c("factor", "factor", "numeric", "character", "character", "character"))
all(setequal(unique(test_snv_dists$Isolate1), unique(test_snv_dists$Isolate2)) & setequal(unique(test_snv_dists$Isolate2), unique(names(test_locs))))
all(setequal(unique(test_snv_dists$Loc1), unique(test_snv_dists$Loc2)) & setequal(unique(test_snv_dists$Loc2), unique(test_locs)))
