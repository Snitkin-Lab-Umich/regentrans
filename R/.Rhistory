sp
g %>% igraph::shortest.paths()
g
#find shortest path function -> igraph::shortest.paths()
sp <- g %>% igraph::shortest_paths() %>% as.data.frame()
??igraph::shortest_paths()
?igraph::shortest_paths()
paths <- igraph::get.shortest.paths(g)
paths <- igraph::get.shortest.paths(g, 1)
devtools::load_all()
pt_trans_net
snv_dists
#named list of locations
locs <- regentrans::locs
#named list of patient IDs
pt <- regentrans::pt
#named list of isolate collection dates
dates <- regentrans::dates
#named list of sequence types
st <- NULL
#fasta file
fasta <- regentrans::fasta
#SNV distance matrix
dists <- regentrans::dists
#phylogenetic tree
tree <- regentrans::tr
#patient transfer network
pt_flow <- regentrans::pt_flow
snv_dists <- get_snv_dists(dists = dists, locs = locs, pt = pt)
dists = NULL
locs = NULL
pt = NULL
thresh = 10
paths = FALSE
#run checks
run_snv_dists <- check_pt_transfer_input(pt_trans_net = pt_trans_net, snv_dists = snv_dists,
dists = dists, locs = locs, pt = pt, thresh = thresh)
#make pt_trans_net not factors
pt_trans_net$source_facil <- as.character(pt_trans_net$source_facil)
pt_trans_net$dest_facil <- as.character(pt_trans_net$dest_facil)
run_snv_dists
#run get_snv_dists if necessary
if(run_snv_dists){
cat("Running get_snv_dists...")
snv_dists <- get_snv_dists(dists = dists, locs = locs, pt = pt)
}
paths
pt_trans_net_i <- indirect_flow(pt_trans_net, paths=FALSE)
pt_trans_net_i
#subset to only facilities in the locs object
common_locs <- intersect(unique(c(snv_dists$Loc1, snv_dists$Loc2)), unique(c(pt_trans_net$source_facil, pt_trans_net$dest_facil)))
pt_trans_net <- pt_trans_net %>% dplyr::filter(source_facil %in% common_locs,
dest_facil %in% common_locs)
snv_dists <- snv_dists %>% dplyr::filter(Loc1 %in% common_locs,
Loc2 %in% common_locs)
#remove any same-facility pairs
pat_flow <- dplyr::bind_cols(pt_trans_net %>% filter(source_facil != dest_facil))
pat_flow
snv_dists
snv_dists %>%
mutate(Pairwise_Dists = as.numeric(Pairwise_Dists)) %>%
#group by locations (directed)
dplyr::group_by(Loc1, Loc2)
snv_dists %>%
mutate(Pairwise_Dists = as.numeric(Pairwise_Dists)) %>%
#group by locations (directed)
dplyr::group_by(Loc1, Loc2) %>%
#summarize how many closely related isolates are in each location pair
dplyr::summarize(n_closely_related_pairs = sum(Pairwise_Dists <= thresh))
snv_dists %>%
mutate(Pairwise_Dists = as.numeric(Pairwise_Dists)) %>%
#group by locations (directed)
dplyr::group_by(Loc1, Loc2) %>%
#summarize how many closely related isolates are in each location pair
dplyr::summarize(n_closely_related_pairs = sum(Pairwise_Dists <= thresh)) %>%
#remove locations that are the same
dplyr::filter(Loc1 != Loc2)
snv_dists %>%
mutate(Pairwise_Dists = as.numeric(Pairwise_Dists)) %>%
#group by locations (directed)
dplyr::group_by(Loc1, Loc2) %>%
#summarize how many closely related isolates are in each location pair
dplyr::summarize(n_closely_related_pairs = sum(Pairwise_Dists <= thresh)) %>%
#remove locations that are the same
dplyr::filter(Loc1 != Loc2) %>%
#add in patient transfers from 1 to 2
dplyr::left_join(pat_flow, by = c("Loc1" = "source_facil", "Loc2" = "dest_facil")) %>%
dplyr::rename("n_1_to_2_transfers" = "n_transfers") %>%
#add in patient transfers from 2 to 1
dplyr::left_join(pat_flow, by = c("Loc2" = "source_facil", "Loc1" = "dest_facil")) %>%
dplyr::rename("n_2_to_1_transfers" = "n_transfers")
pt_trans_net_i
snv_dists %>%
mutate(Pairwise_Dists = as.numeric(Pairwise_Dists)) %>%
#group by locations (directed)
dplyr::group_by(Loc1, Loc2) %>%
#summarize how many closely related isolates are in each location pair
dplyr::summarize(n_closely_related_pairs = sum(Pairwise_Dists <= thresh)) %>%
#remove locations that are the same
dplyr::filter(Loc1 != Loc2) %>%
#add in patient transfers from 1 to 2
dplyr::left_join(pat_flow, by = c("Loc1" = "source_facil", "Loc2" = "dest_facil")) %>%
dplyr::rename("n_1_to_2_transfers" = "n_transfers") %>%
#add in patient transfers from 2 to 1
dplyr::left_join(pat_flow, by = c("Loc2" = "source_facil", "Loc1" = "dest_facil")) %>%
dplyr::rename("n_2_to_1_transfers" = "n_transfers") %>%
#add in indirect flow
dplyr::left_join(pt_trans_net_i, by = c("Loc1" = "source_facil", "Loc2" = "dest_facil"))
snv_dists %>%
mutate(Pairwise_Dists = as.numeric(Pairwise_Dists)) %>%
#group by locations (directed)
dplyr::group_by(Loc1, Loc2) %>%
#summarize how many closely related isolates are in each location pair
dplyr::summarize(n_closely_related_pairs = sum(Pairwise_Dists <= thresh)) %>%
#remove locations that are the same
dplyr::filter(Loc1 != Loc2) %>%
#add in patient transfers from 1 to 2
dplyr::left_join(pat_flow, by = c("Loc1" = "source_facil", "Loc2" = "dest_facil")) %>%
dplyr::rename("n_1_to_2_transfers" = "n_transfers") %>%
#add in patient transfers from 2 to 1
dplyr::left_join(pat_flow, by = c("Loc2" = "source_facil", "Loc1" = "dest_facil")) %>%
dplyr::rename("n_2_to_1_transfers" = "n_transfers") %>%
#add in indirect flow 1 to 2
dplyr::left_join(pt_trans_net_i, by = c("Loc1" = "source_facil", "Loc2" = "dest_facil")) %>%
dplyr::rename("indirect_flow_metric_1_to_2" = "pt_trans_metric") %>%
#add in indirect flow 2 to 1
dplyr::left_join(pat_flow, by = c("Loc2" = "source_facil", "Loc1" = "dest_facil")) %>%
dplyr::rename("indirect_flow_metric_2_to_1" = "pt_trans_metric")
snv_dists %>%
mutate(Pairwise_Dists = as.numeric(Pairwise_Dists)) %>%
#group by locations (directed)
dplyr::group_by(Loc1, Loc2) %>%
#summarize how many closely related isolates are in each location pair
dplyr::summarize(n_closely_related_pairs = sum(Pairwise_Dists <= thresh)) %>%
#remove locations that are the same
dplyr::filter(Loc1 != Loc2) %>%
#add in patient transfers from 1 to 2
dplyr::left_join(pat_flow, by = c("Loc1" = "source_facil", "Loc2" = "dest_facil")) %>%
dplyr::rename("n_1_to_2_transfers" = "n_transfers") %>%
#add in patient transfers from 2 to 1
dplyr::left_join(pat_flow, by = c("Loc2" = "source_facil", "Loc1" = "dest_facil")) %>%
dplyr::rename("n_2_to_1_transfers" = "n_transfers") %>%
#add in indirect flow 1 to 2
dplyr::left_join(pt_trans_net_i, by = c("Loc1" = "source_facil", "Loc2" = "dest_facil")) %>%
dplyr::rename("indirect_flow_metric_1_to_2" = "pt_trans_metric")
snv_dists %>%
mutate(Pairwise_Dists = as.numeric(Pairwise_Dists)) %>%
#group by locations (directed)
dplyr::group_by(Loc1, Loc2) %>%
#summarize how many closely related isolates are in each location pair
dplyr::summarize(n_closely_related_pairs = sum(Pairwise_Dists <= thresh)) %>%
#remove locations that are the same
dplyr::filter(Loc1 != Loc2) %>%
#add in patient transfers from 1 to 2
dplyr::left_join(pat_flow, by = c("Loc1" = "source_facil", "Loc2" = "dest_facil")) %>%
dplyr::rename("n_1_to_2_transfers" = "n_transfers") %>%
#add in patient transfers from 2 to 1
dplyr::left_join(pat_flow, by = c("Loc2" = "source_facil", "Loc1" = "dest_facil")) %>%
dplyr::rename("n_2_to_1_transfers" = "n_transfers") %>%
#add in indirect flow 1 to 2
dplyr::left_join(pt_trans_net_i, by = c("Loc1" = "source_facil", "Loc2" = "dest_facil")) %>%
dplyr::rename("indirect_flow_metric_1_to_2" = "pt_trans_metric") %>%
#add in indirect flow 2 to 1
dplyr::left_join(pt_trans_net_i, by = c("Loc2" = "source_facil", "Loc1" = "dest_facil")) %>%
dplyr::rename("indirect_flow_metric_2_to_1" = "pt_trans_metric")
#find shortest path function -> igraph::shortest.paths()
sp <- g %>% igraph::shortest.paths(mode="out") %>% as.data.frame()
#make long form
trans_net_i <- sp %>% as_tibble() %>% mutate(source_facil = colnames(sp)) %>% tidyr::pivot_longer(!source_facil, names_to = "dest_facil", values_to = "pt_trans_metric")
#make them each -(10^x)
trans_net_i$pt_trans_metric <- -(10^trans_net_i$pt_trans_metric)
devtools::load_all()
getwd()
devtools::load_all()
#run checks
run_snv_dists <- check_pt_transfer_input(pt_trans_net = pt_trans_net, snv_dists = snv_dists,
dists = dists, locs = locs, pt = pt, thresh = thresh)
#make pt_trans_net not factors
pt_trans_net$source_facil <- as.character(pt_trans_net$source_facil)
pt_trans_net$dest_facil <- as.character(pt_trans_net$dest_facil)
#run get_snv_dists if necessary
if(run_snv_dists){
cat("Running get_snv_dists...")
snv_dists <- get_snv_dists(dists = dists, locs = locs, pt = pt)
}
#this is where I'll do if else based on direct or indirect flow...
if(paths == TRUE){
ind_flow_output <- indirect_flow(pt_trans_net, paths=TRUE)
pt_trans_net_i <- ind_flow_output$transfer_network
paths <- ind_flow_output$paths
}
pt_trans_net_i <- indirect_flow(pt_trans_net, paths=FALSE)
#subset to only facilities in the locs object
common_locs <- intersect(unique(c(snv_dists$Loc1, snv_dists$Loc2)), unique(c(pt_trans_net$source_facil, pt_trans_net$dest_facil)))
pt_trans_net <- pt_trans_net %>% dplyr::filter(source_facil %in% common_locs,
dest_facil %in% common_locs)
snv_dists <- snv_dists %>% dplyr::filter(Loc1 %in% common_locs,
Loc2 %in% common_locs)
#remove any same-facility pairs
pat_flow <- dplyr::bind_cols(pt_trans_net %>% filter(source_facil != dest_facil))
#instead of all of that we will just left join
pt_trans_summary <- snv_dists %>%
mutate(Pairwise_Dists = as.numeric(Pairwise_Dists)) %>%
#group by locations (directed)
dplyr::group_by(Loc1, Loc2) %>%
#summarize how many closely related isolates are in each location pair
dplyr::summarize(n_closely_related_pairs = sum(Pairwise_Dists <= thresh)) %>%
#remove locations that are the same
dplyr::filter(Loc1 != Loc2) %>%
#add in patient transfers from 1 to 2
dplyr::left_join(pat_flow, by = c("Loc1" = "source_facil", "Loc2" = "dest_facil")) %>%
dplyr::rename("n_1_to_2_transfers" = "n_transfers") %>%
#add in patient transfers from 2 to 1
dplyr::left_join(pat_flow, by = c("Loc2" = "source_facil", "Loc1" = "dest_facil")) %>%
dplyr::rename("n_2_to_1_transfers" = "n_transfers") %>%
#add in indirect flow 1 to 2
dplyr::left_join(pt_trans_net_i, by = c("Loc1" = "source_facil", "Loc2" = "dest_facil")) %>%
dplyr::rename("indirect_flow_metric_1_to_2" = "pt_trans_metric") %>%
#add in indirect flow 2 to 1
dplyr::left_join(pt_trans_net_i, by = c("Loc2" = "source_facil", "Loc1" = "dest_facil")) %>%
dplyr::rename("indirect_flow_metric_2_to_1" = "pt_trans_metric")
View(pt_trans_summary)
-log10(50)
-(10^50)
-(10^1.5)
-log10(1.5)
(10^-1.5)
log10(1.5)
log10(0.1760913)
-log10(1.5)
10^-0.1760913
10^0.1760913
load_all()
pt_trans_net_i <- indirect_flow(pt_trans_net, paths=FALSE)
#subset to only facilities in the locs object
common_locs <- intersect(unique(c(snv_dists$Loc1, snv_dists$Loc2)), unique(c(pt_trans_net$source_facil, pt_trans_net$dest_facil)))
pt_trans_net <- pt_trans_net %>% dplyr::filter(source_facil %in% common_locs,
dest_facil %in% common_locs)
snv_dists <- snv_dists %>% dplyr::filter(Loc1 %in% common_locs,
Loc2 %in% common_locs)
#remove any same-facility pairs
pat_flow <- dplyr::bind_cols(pt_trans_net %>% filter(source_facil != dest_facil))
#instead of all of that we will just left join
pt_trans_summary <- snv_dists %>%
mutate(Pairwise_Dists = as.numeric(Pairwise_Dists)) %>%
#group by locations (directed)
dplyr::group_by(Loc1, Loc2) %>%
#summarize how many closely related isolates are in each location pair
dplyr::summarize(n_closely_related_pairs = sum(Pairwise_Dists <= thresh)) %>%
#remove locations that are the same
dplyr::filter(Loc1 != Loc2) %>%
#add in patient transfers from 1 to 2
dplyr::left_join(pat_flow, by = c("Loc1" = "source_facil", "Loc2" = "dest_facil")) %>%
dplyr::rename("n_1_to_2_transfers" = "n_transfers") %>%
#add in patient transfers from 2 to 1
dplyr::left_join(pat_flow, by = c("Loc2" = "source_facil", "Loc1" = "dest_facil")) %>%
dplyr::rename("n_2_to_1_transfers" = "n_transfers") %>%
#add in indirect flow 1 to 2
dplyr::left_join(pt_trans_net_i, by = c("Loc1" = "source_facil", "Loc2" = "dest_facil")) %>%
dplyr::rename("indirect_flow_metric_1_to_2" = "pt_trans_metric") %>%
#add in indirect flow 2 to 1
dplyr::left_join(pt_trans_net_i, by = c("Loc2" = "source_facil", "Loc1" = "dest_facil")) %>%
dplyr::rename("indirect_flow_metric_2_to_1" = "pt_trans_metric")
-log10(50)
10^-(-1.69897)
?sample
snv_dists$Loc1
sample(snv_dists$Loc1)
snv_dists %>% mutate(Loc1_mut <- sample(Loc1))
snv_dists %>% mutate(Loc1_mut = sample(Loc1))
snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n()) %>% ggplot(aes(x = Loc1_mut, y = n, fill = Pair_Type)) + geom_bar(position = "dodge", stat = "identity") + labs(y = "Number of Closely Related Isolate Pairs", x = "Facility ID", title = "Number of Closely Related Isolate Pairs \nby Facility")
cutoff <- 10
snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n()) %>% ggplot(aes(x = Loc1_mut, y = n, fill = Pair_Type)) + geom_bar(position = "dodge", stat = "identity") + labs(y = "Number of Closely Related Isolate Pairs", x = "Facility ID", title = "Number of Closely Related Isolate Pairs \nby Facility")
cutoff <- 10 #adjust according to your own analysis!
snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n()) %>% ggplot(aes(x = Loc1, y = n, fill = Pair_Type)) + geom_bar(position = "dodge", stat = "identity") + labs(y = "Number of Closely Related Isolate Pairs", x = "Facility ID", title = "Number of Closely Related Isolate Pairs \nby Facility")
snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n()) %>%
snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n()) #%>% ggplot(aes(x = Loc1_mut, y = n, fill = Pair_Type)) + geom_bar(position = "dodge", stat = "identity") + labs(y = "Number of Closely Related Isolate Pairs", x = "Facility ID", title = "Number of Closely Related Isolate Pairs \nby Facility")
cutoff <- 10 #adjust according to your own analysis!
snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n()) %>% ggplot(aes(x = Loc1, y = n, fill = Pair_Type)) + geom_bar(position = "dodge", stat = "identity") + labs(y = "Number of Closely Related Isolate Pairs", x = "Facility ID", title = "Number of Closely Related Isolate Pairs \nby Facility")
snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n()) #%>% ggplot(aes(x = Loc1_mut, y = n, fill = Pair_Type)) + geom_bar(position = "dodge", stat = "identity") + labs(y = "Number of Closely Related Isolate Pairs", x = "Facility ID", title = "Number of Closely Related Isolate Pairs \nby Facility")
c(paste(locs, c("Inter-facility pair", "Intra-facility pair")))
locs
#named list of locations
locs <- regentrans::locs
#named list of patient IDs
pt <- regentrans::pt
#named list of isolate collection dates
dates <- regentrans::dates
#named list of sequence types
st <- NULL
#fasta file
fasta <- regentrans::fasta
#SNV distance matrix
dists <- regentrans::dists
#phylogenetic tree
tree <- regentrans::tr
#patient transfer network
pt_flow <- regentrans::pt_flow
c(paste(locs, c("Inter-facility pair", "Intra-facility pair")))
c(paste(c("Inter-facility pair", "Intra-facility pair"), locs))
paste(c("Inter-", "Intra-"), locs)
c(paste(c("Inter-", "Intra-"), unique(locs)))
paste(unique(locs), c("Inter-", "Intra-"))
rep(c("Inter-", "Intra-"), each = length(unique(locs)), unique(locs))
paste(rep(c("Inter-", "Intra-"), each = length(unique(locs)), unique(locs)))
length(unique(locs))
each = length(unique(locs))
paste(rep(c("Inter-", "Intra-"), each = length(unique(locs))), unique(locs))
setNames(data.frame(matrix(ncol = 2*unique(locs), nrow = 100)), paste(rep(c("Inter-", "Intra-"), each = length(unique(locs))), unique(locs)))
setNames(data.frame(matrix(ncol = 2*length(unique(locs)), nrow = 100)), paste(rep(c("Inter-", "Intra-"), each = length(unique(locs))), unique(locs)))
permut <- setNames(data.frame(matrix(ncol = 2*length(unique(locs)), nrow = 100)), paste(rep(c("Inter-", "Intra-"), each = length(unique(locs))), unique(locs)))
?apply
snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
summary <- snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n()) %>% mutate(shortcode = paste(substr(Pair_Type, 1, 6), Loc1_mut))
summary <- snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n()) %>% mutate(shortcode = paste(substr(Pair_Type, 1, 6), Loc1_mut))
summary
permut <- setNames(data.frame(matrix(ncol = 100, nrow = 2*length(unique(locs)))), paste(rep(c("Inter-", "Intra-"), each = length(unique(locs))), unique(locs)))
permut
?setNames
snv_dists %>% select(Loc1, Loc2, Pair_Type)
snv_dists %>% select(Loc1, Loc2, Pair_Type) %>% group_by(Loc1, Loc2, Pair_Type) %>% summarize()
#column 1 = repeated A, B, C,etc.
rep(unique(locs), each = length(unique(locs)))
cbind(rep(unique(locs), each = length(unique(locs))), unique(locs))
snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
cbind(rep(unique(locs), each = 2, c("Inter-facility pair", "Intra-facility pair")))
cbind(rep(unique(locs), each = 2), c("Inter-facility pair", "Intra-facility pair")))
rep(unique(locs), each = 2)
cbind(rep(unique(locs), each = 2), c("Inter-facility pair", "Intra-facility pair"))
setNames(cbind(rep(unique(locs), each = 2), c("Inter-facility pair", "Intra-facility pair")), c("Loc1_mut", "Pair_Type"))
setNames(cbind(rep(unique(locs), each = 2), c("Inter-facility pair", "Intra-facility pair")), c("Loc1_mut", "Pair_Type"))
setNames(as.data.frame(cbind(rep(unique(locs), each = 2), c("Inter-facility pair", "Intra-facility pair"))), c("Loc1_mut", "Pair_Type"))
permut <- setNames(as.data.frame(cbind(rep(unique(locs), each = 2), c("Inter-facility pair", "Intra-facility pair"))), c("Loc1_mut", "Pair_Type"))
permut
summary <- snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n()) %>% mutate(shortcode = paste(substr(Pair_Type, 1, 6), Loc1_mut))
summary
snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
left_join(permut, summary)
summary <- snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
summary
permut
left_join(permut, summary)
permut <- setNames(as.data.frame(cbind(rep(unique(locs), each = 2), c("Inter-facility pair", "Intra-facility pair"))), c("Loc1_mut", "Pair_Type"))
for(i in 1:100)
for(i in 1:100){}
for(i in 1:100){
summary <- snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
left_join(permut, summary)
}
permut <- setNames(as.data.frame(cbind(rep(unique(locs), each = 2), c("Inter-facility pair", "Intra-facility pair"))), c("Loc1_mut", "Pair_Type"))
for(i in 1:100){
summary <- snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
permut <- left_join(permut, summary)
}
View(permut)
permut <- setNames(as.data.frame(cbind(rep(unique(locs), each = 2), c("Inter-facility pair", "Intra-facility pair"))), c("Loc1_mut", "Pair_Type"))
for(i in 1:100){
summary <- snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
permut <- left_join(permut, summary)
}
left_join(permut, summary)
permut <- left_join(permut, summary)
permut
summary <- snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
permut <- left_join(permut, summary)
permut
Loc1_mut = sample(Loc1)
snv_dists %>% mutate(Loc1_mut = sample(Loc1))
snv_dists %>% mutate(Loc1_mut = sample(Loc1))
snv_dists %>% mutate(Loc1_mut = sample(Loc1))
for(i in 1:100){
summary <- snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
permut <- left_join(permut, summary)
}
permut
permut
summary
permut
summary
summary  <- snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
summary
summary  <- snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
summary
snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
permut <- setNames(as.data.frame(cbind(rep(unique(locs), each = 2), c("Inter-facility pair", "Intra-facility pair"))), c("Loc1_mut", "Pair_Type"))
permut
left_join(permut, summary, by = c("Loc1_mut" = "Loc1_mut", "Pair_Type" = "Pair_Type"))
summary  <- snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
left_join(permut, summary, by = c("Loc1_mut" = "Loc1_mut", "Pair_Type" = "Pair_Type"))
permut <- left_join(permut, summary, by = c("Loc1_mut" = "Loc1_mut", "Pair_Type" = "Pair_Type"))
summary  <- snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
permut <- left_join(permut, summary, by = c("Loc1_mut" = "Loc1_mut", "Pair_Type" = "Pair_Type"))
permut
permut <- setNames(as.data.frame(cbind(rep(unique(locs), each = 2), c("Inter-facility pair", "Intra-facility pair"))), c("Loc1_mut", "Pair_Type"))
for(i in 1:100){
summary  <- snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
permut <- left_join(permut, summary, by = c("Loc1_mut" = "Loc1_mut", "Pair_Type" = "Pair_Type"))
}
View(permut)
t(permut)
c("Loc1", "Pair_Type", 1:100)
colnames(permut) = c("Loc1", "Pair_Type", 1:100)
t(permut)
test <- t(permut)
View(test)
paste(Loc1, Pair_Type)
paste(test$Loc1, test$Pair_Type)
test <- as.data.frame(t(permut))
paste(test$Loc1, test$Pair_Type)
test$Loc1
test[1,]
paste(test[1,], test[2,])
rownames(test) <- paste(test[1,], test[2,])
colnames(test) <- paste(test[1,], test[2,])
test[-1:2,]
test[-c(1:2),]
test <- test[-c(1:2),]
ToothGrowth
View(tree)
permut %>% tidyr::pivot_longer(!c(Loc1, Pair_Type), names_to = "value")
permut %>% tidyr::pivot_longer(!c(Loc1, Pair_Type), names_to = "run", values_to = "value")
permut_test <- permut %>% tidyr::pivot_longer(!c(Loc1, Pair_Type), names_to = "run", values_to = "value")
View(permut_test)
ggplot(permut_test) + geom_boxplot(x = Loc1, y = value)
permut_test <- permut %>% tidyr::pivot_longer(!c(Loc1, Pair_Type), names_to = "run", values_to = "value")
ggplot(permut_test) + geom_boxplot(x = Loc1, y = value)
ggplot(permut_test) + geom_boxplot(mapping = aes(x = Loc1, y = value))
ggplot() + geom_boxplot(data = subset(permut_test, Pair_Type == "Inter-facility pair"), mapping = aes(x = Loc1, y = value), color = "blue")
ggplot() + geom_boxplot(data = subset(permut_test, Pair_Type == "Inter-facility pair"), mapping = aes(x = Loc1, y = value), color = "blue") + geom_boxplot(data = subset(permut_test, Pair_Type == "Intra-facility pair
"), mapping = aes(x = Loc1, y = value), color = "salmon")
ggplot() + geom_boxplot(data = subset(permut_test, Pair_Type == "Inter-facility pair"), mapping = aes(x = Loc1, y = value), color = "blue") + geom_boxplot(data = subset(permut_test, Pair_Type == "Intra-facility pair
"), mapping = aes(x = Loc1, y = value), color = "pink")
ggplot() + geom_boxplot(data = subset(permut_test, Pair_Type == "Inter-facility pair"), mapping = aes(x = Loc1, y = value), color = "blue") + geom_boxplot(data = subset(permut_test, Pair_Type == "Intra-facility pair"), mapping = aes(x = Loc1, y = value), color = "pink")
ggplot(permut_test) + geom_boxplot(mapping = aes(x = Loc1, y = value, fill = Pair_Type), color = "blue")
ggplot(permut_test) + geom_boxplot(mapping = aes(x = Loc1, y = value, fill = Pair_Type))
View(snv_dists)
(snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n()))
ggplot(permut_test) + geom_boxplot(mapping = aes(x = Loc1, y = value, fill = Pair_Type)) + geom_point(data = (snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())), x = Loc1, y = n, fill = Pair_Type)
snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())
test <- snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())
ggplot(permut_test) + geom_boxplot(mapping = aes(x = Loc1, y = value, fill = Pair_Type)) + geom_point(data = (snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())), mapping = aes(x = Loc1, y = n, fill = Pair_Type))
ggplot(permut_test) + geom_boxplot(mapping = aes(x = Loc1, y = value, fill = Pair_Type)) + geom_point(data = (snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())), mapping = aes(x = Loc1, y = n, color = Pair_Type))
ggplot(permut_test) + geom_boxplot(mapping = aes(x = Loc1, y = value, fill = Pair_Type)) + geom_point(data = (snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())), mapping = aes(x = Loc1, y = n, color = Pair_Type)) + scale_color_hue(l=40, c=35)
ggplot(permut_test) + geom_boxplot(mapping = aes(x = Loc1, y = value)) + geom_point(data = (snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())), mapping = aes(x = Loc1, y = n, color = Pair_Type)) + scale_color_hue(l=40, c=35)
ggplot(permut_test) + geom_boxplot(mapping = aes(x = Loc1, y = value)) + geom_point(data = (snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())), mapping = aes(x = Loc1, y = n, color = Pair_Type))
ggplot(permut_test) + geom_boxplot(mapping = aes(x = Loc1, y = value, fill = Pair_Type)) + geom_point(data = (snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())), mapping = aes(x = Loc1, y = n, color = Pair_Type)) + scale_color_hue(l=40, c=35)
ggplot(permut_test) + geom_boxplot(mapping = aes(x = Loc1, y = value, fill = Pair_Type)) + geom_point(data = (snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())), mapping = aes(x = Loc1, y = n, color = Pair_Type), values=c("red", "blue"))
ggplot(permut_test) + geom_boxplot(mapping = aes(x = Loc1, y = value, fill = Pair_Type)) + geom_point(data = (snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())), mapping = aes(x = Loc1, y = n, color = Pair_Type)) + scale_color_manual(values=c("red", "blue")
ggplot(permut_test) + geom_boxplot(mapping = aes(x = Loc1, y = value, fill = Pair_Type)) + geom_point(data = (snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())), mapping = aes(x = Loc1, y = n, color = Pair_Type)) + scale_color_manual(values=c("red", "blue"))
ggplot(permut_test) + geom_boxplot(mapping = aes(x = Loc1, y = value, fill = Pair_Type)) + geom_point(data = (snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())), mapping = aes(x = Loc1, y = n, color = Pair_Type)) + scale_color_manual(values=c("red", "blue"))
ggplot(permut_test) + geom_boxplot(mapping = aes(x = Loc1, y = value, fill = Pair_Type)) + geom_point(data = (snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())), mapping = aes(x = Loc1, y = n, color = Pair_Type)) + scale_color_manual(values=c("blue", "red"))
ggplot(permut_test) + geom_boxplot(mapping = aes(x = Loc1, y = value, fill = Pair_Type)) + geom_point(data = (snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())), mapping = aes(x = Loc1, y = n, color = Pair_Type)) + scale_color_manual(values=c("red", "blue"))
ggplot(permut_test) + geom_boxplot(mapping = aes(x = Loc1, y = value, fill = Pair_Type)) + geom_point(data = (snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())), mapping = aes(x = Loc1, y = n, color = Pair_Type)) + scale_color_manual(values=c("red", "blue")) + labs(y = "Number of Closely Related Isolate Pairs (permuted)", x = "Facility ID", title = "Number of Closely Related Isolate Pairs \nby Facility Permuted Averages with real-value points")
ggplot(permut_test) + geom_boxplot(mapping = aes(x = Loc1, y = value, fill = Pair_Type)) + geom_point(data = (snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())), mapping = aes(x = Loc1, y = n, color = Pair_Type)) + scale_color_manual(values=c("red", "blue")) + labs(y = "Number of Closely Related Isolate Pairs (permuted)", x = "Facility ID", title = "Permuted Number of Closely Related Isolate Pairs \nby Facility with real-value points")
ggplot(permut_test) + geom_boxplot(mapping = aes(x = Loc1, y = value, fill = Pair_Type)) + geom_point(data = (snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())), mapping = aes(x = Loc1, y = n, color = Pair_Type)) + scale_color_manual(values=c("red", "blue")) + labs(y = "Number of Closely Related \nIsolate Pairs (permuted)", x = "Facility ID", title = "Permuted Number of Closely Related Isolate Pairs \nby Facility with real-value points")
#column 1 = repeated A, B, C,etc.
permut <- setNames(as.data.frame(cbind(rep(unique(locs), each = 2), c("Inter-facility pair", "Intra-facility pair"))), c("Loc1_mut", "Pair_Type"))
for(i in 1:100){
summary  <- snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
permut <- left_join(permut, summary, by = c("Loc1_mut" = "Loc1_mut", "Pair_Type" = "Pair_Type"))
}
colnames(permut) = c("Loc1", "Pair_Type", 1:100)
permut_test <- permut %>% tidyr::pivot_longer(!c(Loc1, Pair_Type), names_to = "run", values_to = "value")
permut %>% `colnames<-`(c("Loc1", "Pair_Type", 1:100))
permut %>% `colnames<-`(c("Loc1", "Pair_Type", 1:100)) %>% tidyr::pivot_longer(!c(Loc1, Pair_Type), names_to = "run", values_to = "value") %>% ggplot(permut_test) + geom_boxplot(mapping = aes(x = Loc1, y = value, fill = Pair_Type)) + geom_point(data = (snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())), mapping = aes(x = Loc1, y = n, color = Pair_Type)) + scale_color_manual(values=c("red", "blue")) + labs(y = "Number of Closely Related \nIsolate Pairs (permuted)", x = "Facility ID", title = "Permuted Number of Closely Related Isolate Pairs \nby Facility with real-value points")
permut %>% `colnames<-`(c("Loc1", "Pair_Type", 1:100)) %>% tidyr::pivot_longer(!c(Loc1, Pair_Type), names_to = "run", values_to = "value") %>% ggplot() + geom_boxplot(mapping = aes(x = Loc1, y = value, fill = Pair_Type)) + geom_point(data = (snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())), mapping = aes(x = Loc1, y = n, color = Pair_Type)) + scale_color_manual(values=c("red", "blue")) + labs(y = "Number of Closely Related \nIsolate Pairs (permuted)", x = "Facility ID", title = "Permuted Number of Closely Related Isolate Pairs \nby Facility with real-value points")
permut %>% `colnames<-`(c("Loc1", "Pair_Type", 1:100)) %>% tidyr::pivot_longer(!c(Loc1, Pair_Type), names_to = "run", values_to = "value")
permut %>% `colnames<-`(c("Loc1", "Pair_Type", 1:100)) %>% tidyr::pivot_longer(!c(Loc1, Pair_Type), names_to = "run", values_to = "value") %>% sum(is.na(value))
test <- permut %>% `colnames<-`(c("Loc1", "Pair_Type", 1:100)) %>% tidyr::pivot_longer(!c(Loc1, Pair_Type), names_to = "run", values_to = "value")
sum(is.na(test$value))
?get_snv_dists
unique(snv_dists$Patient1)
snv_dists %>% filter(Pair_Type == "Intra-facility pair")
snv_dists %>% filter(Pair_Type == "Intra-facility pair") %>% mutate(Env_Pair_Type = ifelse(Patient1 < 300 & Patient2 < 300, "pt-pt", ifelse(Patient1 > 300 & Patient2 > 300, "env-env", "pt-env")))
test <- snv_dists %>% filter(Pair_Type == "Intra-facility pair") %>% mutate(Env_Pair_Type = ifelse(Patient1 < 300 & Patient2 < 300, "pt-pt", ifelse(Patient1 > 300 & Patient2 > 300, "env-env", "pt-env")))
snv_dists %>% filter(Pair_Type == "Intra-facility pair") %>% mutate(Env_Pair_Type = ifelse(Patient1 < 300 & Patient2 < 300, "pt-pt", ifelse(Patient1 > 300 & Patient2 > 300, "env-env", "pt-env"))) %>% filter(Pairwise_Dists <= thresh) %>% group_by(Env_Pair_Type) %>% summarize(n = n())
snv_dists %>% filter(Pair_Type == "Intra-facility pair") %>% mutate(Env_Pair_Type = ifelse(Patient1 < 300 & Patient2 < 300, "pt-pt", ifelse(Patient1 > 300 & Patient2 > 300, "env-env", "pt-env"))) %>% filter(Pairwise_Dists <= thresh) %>% group_by(Env_Pair_Type) %>% summarize(n = n()) %>% ggplot() + geom_bar(mapping = aes(x = Env_Pair_Type, y = n), stat = "Identity")
snv_dists %>% filter(Pair_Type == "Intra-facility pair") %>% mutate(Pt_Pair_Type = ifelse(Patient1 < 300 & Patient2 < 300, "pt-pt", ifelse(Patient1 > 300 & Patient2 > 300, "env-env", "pt-env"))) %>% filter(Pairwise_Dists <= thresh) %>% group_by(Pt_Pair_Type) %>% summarize(n = n()) %>% ggplot() + geom_bar(mapping = aes(x = Pt_Pair_Type, y = n), stat = "Identity", fill = "salmon") + labs(y = "Number of Closely Related Isolate Pairs", x = "Sample Pair Type", title = "Number of Closely Related Isolate Pairs \nby Sample Pair Type")
thresh
permut <- setNames(as.data.frame(cbind(rep(unique(locs), each = 2), c("Inter-facility pair", "Intra-facility pair"))), c("Loc1_mut", "Pair_Type"))
set.seed(10)
for(i in 1:100){
summary  <- snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
permut <- left_join(permut, summary, by = c("Loc1_mut" = "Loc1_mut", "Pair_Type" = "Pair_Type"))
}
permut %>% `colnames<-`(c("Loc1", "Pair_Type", 1:100)) %>% tidyr::pivot_longer(!c(Loc1, Pair_Type), names_to = "run", values_to = "value") %>% ggplot() + geom_boxplot(mapping = aes(x = Loc1, y = value, fill = Pair_Type)) + geom_point(data = (snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())), mapping = aes(x = Loc1, y = n, color = Pair_Type)) + scale_color_manual(values=c("red", "blue")) + labs(y = "Number of Closely Related \nIsolate Pairs (permuted)", x = "Facility ID", title = "Permuted Number of Closely Related Isolate Pairs \nby Facility with real-value points")
permut <- setNames(as.data.frame(cbind(rep(unique(locs), each = 2), c("Inter-facility pair", "Intra-facility pair"))), c("Loc1_mut", "Pair_Type"))
set.seed(10)
for(i in 1:100){
summary  <- snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
permut <- left_join(permut, summary, by = c("Loc1_mut" = "Loc1_mut", "Pair_Type" = "Pair_Type"))
}
permut %>% `colnames<-`(c("Loc1", "Pair_Type", 1:100)) %>% tidyr::pivot_longer(!c(Loc1, Pair_Type), names_to = "run", values_to = "value") %>% ggplot() + geom_boxplot(mapping = aes(x = Loc1, y = value, fill = Pair_Type)) + geom_point(data = (snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())), mapping = aes(x = Loc1, y = n, color = Pair_Type)) + scale_color_manual(values=c("red", "blue")) + labs(y = "Number of Closely Related \nIsolate Pairs (permuted)", x = "Facility ID", title = "Permuted Number of Closely Related Isolate Pairs \nby Facility with real-value points")
permut <- setNames(as.data.frame(cbind(rep(unique(locs), each = 2), c("Inter-facility pair", "Intra-facility pair"))), c("Loc1_mut", "Pair_Type"))
#for reproducibility
set.seed(10)
for(i in 1:100){
summary  <- snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
permut <- left_join(permut, summary, by = c("Loc1_mut" = "Loc1_mut", "Pair_Type" = "Pair_Type"))
}
permut %>% `colnames<-`(c("Loc1", "Pair_Type", 1:100)) %>% tidyr::pivot_longer(!c(Loc1, Pair_Type), names_to = "run", values_to = "value") %>% ggplot() + geom_boxplot(mapping = aes(x = Loc1, y = value, fill = Pair_Type)) + geom_point(data = (snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())), mapping = aes(x = Loc1, y = n, color = Pair_Type)) + scale_color_manual(values=c("red", "blue")) + labs(y = "Number of Closely Related \nIsolate Pairs (permuted)", x = "Facility ID", title = "Permuted Number of Closely Related Isolate Pairs \nby Facility with real-value points")
permut <- setNames(as.data.frame(cbind(rep(unique(locs), each = 2), c("Inter-facility pair", "Intra-facility pair"))), c("Loc1_mut", "Pair_Type"))
for(i in 1:100){
#for reproducibility
set.seed(i)
summary  <- snv_dists %>% mutate(Loc1_mut = sample(Loc1)) %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1_mut, Pair_Type) %>% summarize(n = n())
permut <- left_join(permut, summary, by = c("Loc1_mut" = "Loc1_mut", "Pair_Type" = "Pair_Type"))
}
permut %>% `colnames<-`(c("Loc1", "Pair_Type", 1:100)) %>% tidyr::pivot_longer(!c(Loc1, Pair_Type), names_to = "run", values_to = "value") %>% ggplot() + geom_boxplot(mapping = aes(x = Loc1, y = value, fill = Pair_Type)) + geom_point(data = (snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())), mapping = aes(x = Loc1, y = n, color = Pair_Type)) + scale_color_manual(values=c("red", "blue")) + labs(y = "Number of Closely Related \nIsolate Pairs (permuted)", x = "Facility ID", title = "Permuted Number of Closely Related Isolate Pairs \nby Facility with real-value points")
