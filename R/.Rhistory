n
n <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
Pairwise_Dists <= thresh) #%>% nrow()
n
#write function to summarize
#facil_1, Facil_2, transfer_info, n_closely_related_pairs
#input: snv_dists output (or stuff to make it), patient flow network, threshold
thresh = 50
pat_flow_summary <- apply(pat_flow, 1, function(x){
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[x,1]), as.character(pat_flow[x,2]))
n <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
Pairwise_Dists <= thresh) %>% nrow()
#subset to only ones that are under the distance threshold
print(n)
return(n)
})
pat_flow_summary <- apply(pat_flow, 1, function(x){
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[x,1]), as.character(pat_flow[x,2]))
n <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
Pairwise_Dists <= thresh) #%>% nrow()
#subset to only ones that are under the distance threshold
print(n)
return(nrow(n))
})
pat_flow_summary <- apply(pat_flow, 1, function(x){
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[x,1]), as.character(pat_flow[x,2]))
n <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2)#,
#Pairwise_Dists <= thresh) #%>% nrow()
#subset to only ones that are under the distance threshold
print(n)
return(nrow(n))
})
x = 1
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[x,1]), as.character(pat_flow[x,2]))
pair
n <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2)#,
n
#Pairwise_Dists <= thresh) #%>% nrow()
#subset to only ones that are under the distance threshold
print(n)
pat_flow_summary <- apply(pat_flow, 1, function(x){
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[x,1]), as.character(pat_flow[x,2]))
n <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2)#,
#Pairwise_Dists <= thresh) #%>% nrow()
#subset to only ones that are under the distance threshold
print(n)
return(nrow(n))
})
pat_flow_summary <- apply(pat_flow, 1, function(x){
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[x,1]), as.character(pat_flow[x,2]))
n <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2)#,
as.numeric(Pairwise_Dists) <= thresh) #%>% nrow()
#subset to only ones that are under the distance threshold
print(n)
return(nrow(n))
})
pat_flow_summary <- apply(pat_flow, 1, function(x){
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[x,1]), as.character(pat_flow[x,2]))
n <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
as.numeric(Pairwise_Dists) <= thresh) #%>% nrow()
#subset to only ones that are under the distance threshold
print(n)
return(nrow(n))
})
thresh
x = 1
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[x,1]), as.character(pat_flow[x,2]))
pair
n <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
as.numeric(Pairwise_Dists) <= thresh) #%>% nrow()
n
#subset to only ones that are under the distance threshold
print(n)
nrow(n)
#subset to only ones that are under the distance threshold
print(n)
x = 2
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[x,1]), as.character(pat_flow[x,2]))
pair
n <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
as.numeric(Pairwise_Dists) <= thresh) #%>% nrow()
n
snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2
)
x = 3
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[x,1]), as.character(pat_flow[x,2]))
pair
n
n <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
as.numeric(Pairwise_Dists) <= thresh) #%>% nrow()
n
#subset to only ones that are under the distance threshold
print(n)
nrow(n)
pat_flow_summary <- data.frame(apply(pat_flow, 1, function(x){
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[x,1]), as.character(pat_flow[x,2]))
n <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
as.numeric(Pairwise_Dists) <= thresh) #%>% nrow()
#subset to only ones that are under the distance threshold
print(n)
return(nrow(n));
}))
pat_flow_summary
pat_flow
#subset to one of each pair
snv_dists_sub <- subset_pairs(snv_dists)
#subset to the one of each pair
pat_flow <- dplyr::bind_cols(pat_flow %>% filter(source_facil != dest_facil))
pat_flow <- pat_flow[!duplicated(t(apply(pat_flow, 1, sort))),]
pat_flow_summary <- data.frame(apply(pat_flow, 1, function(x){
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[x,1]), as.character(pat_flow[x,2]))
n <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
as.numeric(Pairwise_Dists) <= thresh) %>% nrow()
#subset to only ones that are under the distance threshold
return(n)
}))
pat_flow_summary
pat_flow_summary <- data.frame(apply(pat_flow, 1, function(x){
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[x,1]), as.character(pat_flow[x,2]))
n <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
as.numeric(Pairwise_Dists) <= thresh) %>% nrow()
#subset to only ones that are under the distance threshold
n
}))
pat_flow_summary
pat_flow_summary <- data.frame(apply(pat_flow, 1, function(x){
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[x,1]), as.character(pat_flow[x,2]))
n <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
as.numeric(Pairwise_Dists) <= thresh) %>% nrow()
#subset to only ones that are under the distance threshold
return(x)
}))
pat_flow_summary
pat_flow_summary <- data.frame(apply(pat_flow, 1, function(x){
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[x,1]), as.character(pat_flow[x,2]))
return(snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
as.numeric(Pairwise_Dists) <= thresh) %>%
nrow())
#subset to only ones that are under the distance threshold
}))
pat_flow_summary
pat_flow_summary <- data.frame(apply(pat_flow, 1, function(x){
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[x,1]), as.character(pat_flow[x,2]))
return(snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
as.numeric(Pairwise_Dists) <= thresh) %>%
as.numeric(nrow()))
#subset to only ones that are under the distance threshold
}))
pat_flow_summary <- data.frame(apply(pat_flow, 1, function(x){
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[x,1]), as.character(pat_flow[x,2]))
return(snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
as.numeric(Pairwise_Dists) <= thresh) %>%
nrow() %>% as.numeric())
#subset to only ones that are under the distance threshold
}))
pat_flow_summary
x = 1
x
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[x,1]), as.character(pat_flow[x,2]))
pair
snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
as.numeric(Pairwise_Dists) <= thresh) %>%
nrow() %>% as.numeric()
pat_flow_summary <- data.frame(apply(pat_flow, 1, function(x){
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[x,1]), as.character(pat_flow[x,2]))
x <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
as.numeric(Pairwise_Dists) <= thresh) %>%
nrow() %>% as.numeric()
return(x)
#subset to only ones that are under the distance threshold
}))
pat_flow_summary
for(i in 1:nrow(pat_flow)){
pair <- c(as.character(pat_flow[i,1]), as.character(pat_flow[i,2]))
n <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
as.numeric(Pairwise_Dists) <= thresh) %>%
nrow() %>% as.numeric()
print(n)
}
split(pat_flow[,1:2], seq(nrow(pat_flow)))
pat_flow <- split(pat_flow[,1:2], seq(nrow(pat_flow)))
pat_flow_summary <- data.frame(lapply(pat_flow, 1, function(x){
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[x,1]), as.character(pat_flow[x,2]))
n <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
as.numeric(Pairwise_Dists) <= thresh) %>%
nrow() %>% as.numeric()
return(n)
#subset to only ones that are under the distance threshold
}))
pat_flow_summary <- data.frame(lapply(pat_flow, function(x){
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[x,1]), as.character(pat_flow[x,2]))
n <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
as.numeric(Pairwise_Dists) <= thresh) %>%
nrow() %>% as.numeric()
return(n)
#subset to only ones that are under the distance threshold
}))
pat_flow
pat_flow[[1]]
pat_flow[[1]][1]
as.character(pat_flow[[1]][1])
pat_flow[[1]][1]
pat_flow[[1]]
pat_flow[[1]][[2]]
as.character(pat_flow[[1]][[2]])
pat_flow_summary <- data.frame(lapply(pat_flow, function(x){
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[[1]][[1]]), as.character(pat_flow[[1]][[2]]))
n <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
as.numeric(Pairwise_Dists) <= thresh) %>%
nrow() %>% as.numeric()
return(n)
#subset to only ones that are under the distance threshold
}))
pat_flow_summary
x = 1
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[[1]][[1]]), as.character(pat_flow[[1]][[2]]))
pat_flow_summary <- data.frame(lapply(pat_flow, function(x){
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(pat_flow[[x]][[1]]), as.character(pat_flow[[x]][[2]]))
n <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
as.numeric(Pairwise_Dists) <= thresh) %>%
nrow() %>% as.numeric()
return(n)
#subset to only ones that are under the distance threshold
}))
pat_flow
x <- pat_flow[[1]]
x
x[[1]]
x[[2]])
x[[2]]
w
pat_flow_summary <- data.frame(lapply(pat_flow, function(x){
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(x[[1]]), as.character(x[[2]]))
n <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
as.numeric(Pairwise_Dists) <= thresh) %>%
nrow() %>% as.numeric()
return(n)
#subset to only ones that are under the distance threshold
}))
pat_flow_summary
pat_flow
#add this info back to the list
df <- data.frame(matrix(unlist(pat_flow), nrow=length(pat_flow), byrow=TRUE))
df
pat_flow_summary
t(pat_flow_summary)
data.frame(matrix(unlist(pat_flow), nrow=length(pat_flow), byrow=TRUE)) %>% cbind(t(pat_flow_summary))
#add this info back to the list
df <- data.frame(matrix(unlist(pat_flow), nrow=length(pat_flow), byrow=TRUE)) %>% mutate(n_closely_related_pairs = t(pat_flow_summary))
df
data.frame(matrix(unlist(pat_flow), nrow=length(pat_flow), byrow=TRUE)) %>% mutate(n_closely_related_pairs = t(pat_flow_summary), facil_1 = X1, facil_2 = X2)
data.frame(matrix(unlist(pat_flow), nrow=length(pat_flow), byrow=TRUE)) %>% mutate(n_closely_related_pairs = t(pat_flow_summary), X1 = facil_1, facil_2 = X2)
data.frame(matrix(unlist(pat_flow), nrow=length(pat_flow), byrow=TRUE)) %>% mutate(n_closely_related_pairs = t(pat_flow_summary), facil_1 = X1, facil_2 = X2) %>% select(3:)
data.frame(matrix(unlist(pat_flow), nrow=length(pat_flow), byrow=TRUE)) %>% mutate(n_closely_related_pairs = t(pat_flow_summary), facil_1 = X1, facil_2 = X2) %>% select(-1, -2)
#add this info back to the list
df <- data.frame(matrix(unlist(pat_flow), nrow=length(pat_flow), byrow=TRUE)) %>% mutate(facil_1 = X1, facil_2 = X2, n_closely_related_pairs = t(pat_flow_summary)) %>% select(-1, -2)
df
pat_flow
pat_flow <- dplyr::bind_cols(pat_flow %>% filter(source_facil != dest_facil))
pat_flow <- pat_flow[!duplicated(t(apply(pat_flow, 1, sort))),]
mat <- data.frame(matrix(data = c(0, 20, 30,
20, 0, 26,
30, 26, 0), nrow = 3, ncol = 3))
rownames(mat) <- c("A", "B", "C")
colnames(mat) <- c("A", "B", "C")
pat_flow <- na.omit(data.frame(as.table(as.matrix(mat))))
#pat_flow <- dplyr::bind_cols(pat_flow %>% filter(Var1 != Var2))
colnames(pat_flow) <- c("source_facil", "dest_facil", "n_transfers")
#try to do stuff with this now to snv_dists output
snv_dists %>% dplyr::left_join(pat_flow, by = c("Loc1" = "source_facil", "Loc2" = "dest_facil"))
#write function to summarize
#facil_1, Facil_2, transfer_info, n_closely_related_pairs
#input: snv_dists output (or stuff to make it), patient flow network, threshold
thresh = 50
#subset to the one of each pair
pat_flow <- dplyr::bind_cols(pat_flow %>% filter(source_facil != dest_facil))
pat_flow <- pat_flow[!duplicated(t(apply(pat_flow, 1, sort))),]
pat_flow
#add this info back to the list
df <- data.frame(matrix(unlist(pat_flow), nrow=length(pat_flow), byrow=TRUE)) %>% mutate(facil_1 = X1, facil_2 = X2, n_closely_related_pairs = t(pat_flow_summary)) %>% select(-1, -2) %>% left_join(pat_flow_1)
mat <- data.frame(matrix(data = c(0, 20, 30,
20, 0, 26,
30, 26, 0), nrow = 3, ncol = 3))
rownames(mat) <- c("A", "B", "C")
colnames(mat) <- c("A", "B", "C")
pat_flow <- na.omit(data.frame(as.table(as.matrix(mat))))
#pat_flow <- dplyr::bind_cols(pat_flow %>% filter(Var1 != Var2))
colnames(pat_flow) <- c("source_facil", "dest_facil", "n_transfers")
#try to do stuff with this now to snv_dists output
snv_dists %>% dplyr::left_join(pat_flow, by = c("Loc1" = "source_facil", "Loc2" = "dest_facil"))
#write function to summarize
#facil_1, Facil_2, transfer_info, n_closely_related_pairs
#input: snv_dists output (or stuff to make it), patient flow network, threshold
thresh = 50
#subset to the one of each pair
pat_flow <- dplyr::bind_cols(pat_flow %>% filter(source_facil != dest_facil))
pat_flow_1 <- pat_flow[!duplicated(t(apply(pat_flow, 1, sort))),]
pat_flow <- split(pat_flow_1[,1:2], seq(nrow(pat_flow_1)))
#subset to one of each pair
snv_dists_sub <- subset_pairs(snv_dists)
pat_flow_summary <- data.frame(lapply(pat_flow, function(x){
#for each pair subset the snv_dists output to include only patients that came from those facilities
pair <- c(as.character(x[[1]]), as.character(x[[2]]))
n <- snv_dists_sub %>% filter(as.character(Loc1) %in% pair,
as.character(Loc2) %in% pair,
Loc1 != Loc2,
as.numeric(Pairwise_Dists) <= thresh) %>%
nrow() %>% as.numeric()
return(n)
#subset to only ones that are under the distance threshold
}))
#add this info back to the list
df <- data.frame(matrix(unlist(pat_flow), nrow=length(pat_flow), byrow=TRUE)) %>% mutate(facil_1 = X1, facil_2 = X2, n_closely_related_pairs = t(pat_flow_summary)) %>% select(-1, -2) %>% left_join(pat_flow_1)
pat_flow
#add this info back to the list
df <- data.frame(matrix(unlist(pat_flow), nrow=length(pat_flow), byrow=TRUE)) %>% mutate(facil_1 = X1, facil_2 = X2, n_closely_related_pairs = t(pat_flow_summary)) %>% select(-1, -2)
df
pat_flow_1
#add this info back to the list
df <- data.frame(matrix(unlist(pat_flow), nrow=length(pat_flow), byrow=TRUE)) %>% mutate(facil_1 = X1, facil_2 = X2, n_closely_related_pairs = t(pat_flow_summary)) %>% select(-1, -2) %>% left_join(pat_flow_1, by = c("facil_1" = "source_facil", "facil_2" = "dest_facil"))
df
mat <- data.frame(matrix(data = c(0, 20, 30,
20, 0, 26,
30, 26, 0), nrow = 3, ncol = 3))
rownames(mat) <- c("A", "B", "C")
colnames(mat) <- c("A", "B", "C")
pat_flow <- na.omit(data.frame(as.table(as.matrix(mat))))
#pat_flow <- dplyr::bind_cols(pat_flow %>% filter(Var1 != Var2))
colnames(pat_flow) <- c("source_facil", "dest_facil", "n_transfers")
pat_flow
pt_trans_net <- pat_flow
class(pt_trans_net)
class(pt_trans_net)
class(pt_trans_net) == "matrix"
any(class(pt_trans_net) == "data.frame")
any(class(pt_trans_net) == "matrix")
(any(class(pt_trans_net) == "data.frame") || any(class(pt_trans_net) == "matrix"))
colnames(pt_trans_net)
all(colnames(pt_trans_net) != c("source_facil", "dest_facil", "n_transfers" )))
all(colnames(pt_trans_net) != c("source_facil", "dest_facil", "n_transfers" ))
all(colnames(pt_trans_net) == c("source_facil", "dest_facil", "n_transfers" ))
c(unique(pt_trans_net$source_facil), unique(pt_trans_net$dest_facil))
pt_trans_net$dest_facil
unique(as.character(pt_trans_net$dest_facil))
c(unique(as.character(pt_trans_net$source_facil)), unique(as.character(pt_trans_net$dest_facil)))
(unique(c(as.character(pt_trans_net$source_facil), as.character(pt_trans_net$dest_facil))))
?apply
apply(pt_trans_net, 2, class)
pt_trans_net
pat_flow$n_transfers <- as.numeric(pat_flow$n_transfers)
pt_trans_net <- pat_flow
apply(pt_trans_net, 2, class)
apply(pat_flow, 2, class)
pat_flow$n_transfers <- as.numeric(pat_flow$n_transfers)
n_transfers
pat_flow$n_transfers
pt_trans_net <- pat_flow
pt_trans_net
apply(pt_trans_net, 2, class)
apply(pt_trans_net, 2, type)
apply(pt_trans_net, 2, typeof)
pt_trans_net
lapply(pt_trans_net, 2, typeof)
lapply(pt_trans_net, typeof)
lapply(pt_trans_net, class)
lapply(pt_trans_net, class) == c("factor", "factor", "numeric")
all(lapply(pt_trans_net, class) == c("factor", "factor", "numeric"))
(all(lapply(pt_trans_net, class) == c("factor", "factor", "numeric")) || all(lapply(pt_trans_net, class) == c("character", "character", "numeric")))
length(intersect(unique(c(as.character(pt_trans_net$source_facil), as.character(pt_trans_net$dest_facil))), unique(names(locs)))) < 2
unique(c(as.character(pt_trans_net$source_facil), as.character(pt_trans_net$dest_facil)))
unique(names(locs))))
unique(names(locs)))
unique(names(locs))
length(intersect(unique(c(as.character(pt_trans_net$source_facil), as.character(pt_trans_net$dest_facil))), unique(locs))) < 2
setequal(unique(c(as.character(pt_trans_net$source_facil), as.character(pt_trans_net$dest_facil))), unique(locs))
unique(c(as.character(pt_trans_net$source_facil)
unique(c(as.character(pt_trans_net$source_facil), as.character(pt_trans_net$dest_facil)))
unique(c(as.character(pt_trans_net$source_facil), as.character(pt_trans_net$dest_facil)))
unique(locs)
pat_flow
thresh
class(thresh)
length(thresh)
#run checks
check_pt_transfer_input(pt_trans_net, snv_dists, dists, locs, pt, thresh)
load_all()
document()
subset_pairs
document()
document()
document()
document()
load_all()
load_all()
#tests for patient transfer
#make a source destination pair test matrix
mat <- data.frame(matrix(data = c(0, 20, 30,
20, 0, 26,
30, 26, 0), nrow = 3, ncol = 3))
rownames(mat) <- c("A", "B", "C")
colnames(mat) <- c("A", "B", "C")
pat_flow <- na.omit(data.frame(as.table(as.matrix(mat))))
#pat_flow <- dplyr::bind_cols(pat_flow %>% filter(Var1 != Var2))
colnames(pat_flow) <- c("source_facil", "dest_facil", "n_transfers")
pat_flow$n_transfers <- as.numeric(pat_flow$n_transfers)
pat_flow
test_locs <- locs[1:4]
test_pt <- as.character(pt[1:4])
names(test_pt) <- names(pt[1:4])
test_dists <- dists[names(test_locs), names(test_locs)]
test_snv_dists <- get_snv_dists(dists = test_dists, locs = test_locs, pt = test_pt)
test_locs <- locs[1:4]
test_pt <- as.character(pt[1:4])
names(test_pt) <- names(pt[1:4])
test_dists <- dists[names(test_locs), names(test_locs)]
test_snv_dists <- get_snv_dists(dists = test_dists, locs = test_locs, pt = test_pt)
test_locs <- locs[1:4]
test_pt <- as.character(pt[1:4])
names(test_pt) <- names(pt[1:4])
test_dists <- dists[names(test_locs), names(test_locs)]
test_snv_dists <- get_snv_dists(dists = test_dists, locs = test_locs, pt = test_pt)
load_all()
test_locs <- locs[1:4]
test_pt <- as.character(pt[1:4])
names(test_pt) <- names(pt[1:4])
test_dists <- dists[names(test_locs), names(test_locs)]
test_snv_dists <- get_snv_dists(dists = test_dists, locs = test_locs, pt = test_pt)
patient_transfer(pat_flow, test_snv_dists)
patient_transfer(pat_flow, test_snv_dists)
load_all()
patient_transfer(pat_flow, test_snv_dists)
test_locs
patient_transfer(pat_flow, test_snv_dists)
