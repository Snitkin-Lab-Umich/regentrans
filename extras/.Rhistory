all(sapply(fsp_long, class) == c("factor","factor","numeric"))
all(fsp_long$Fsp_val <= 1) & all(fsp_long$Fsp_val > 0)
all(fsp_mat == <= 1)
all(fsp_mat <= 1)
all(fsp_mat <= 1) & all(fsp_mat >= 0)
?diag
diag(fsp_mat)
fsp_mat
class(fsp_mat)
diag(fsp_mat)
matrix(fsp_mat)
as.matrix(fsp_mat)
diag(as.matrix(fsp_mat)
)
all(diag(as.matrix(fsp_mat)) == 0)
use_r("prune_tree")
library(devtools)
use_r("prune_tree")
load_all()
tree
tree <- tr
pt
isolates <- intersect(tree$tip.label, names(pt))
#subset locs
pt_sub <- pt[isolates]
#subset the tree
tree_sub <- ape::keep.tip(tree,isolates)
first_sts = subtrees(tree_sub)
#load libraries
library(ape)
#get subtrees
first_sts = ape::subtrees(tree_sub)
pruned_tree_tips = sapply(1:length(first_sts), FUN = function(x){print(x)
temp_tree = first_sts[[x]];
temp_tree_mat = t(sapply(temp_tree$tip.label, FUN = function(x){
cbind(substr(strsplit(x, "-")[[1]][2], 1, 1), strsplit(x, "-")[[1]][3])}))
if (length(unique(temp_tree_mat[,1])) > 1){
keep_tree = temp_tree
} else if (
sum(temp_tree_mat[,2] != 0) == 0){
keep_tree = temp_tree;
} else if (
sum(temp_tree_mat[,2] == 0) > 0){
drop_tip = temp_tree_mat[temp_tree_mat[,2] != 0,,drop = FALSE]
keep_tree = drop.tip(temp_tree, rownames(drop_tip))
} else if (
length(unique(temp_tree_mat[,2][temp_tree_mat[,2] != 0])) > 0){
# This chunk will not run because path_visit file is not provided on github.
# Will keep both tips for now.
# pt_visit_date = sapply(rownames(temp_tree_mat),FUN = function(z){
#   pt = strsplit(z, "-")[[1]][2]
#   visit = strsplit(z, "-")[[1]][3]
#   date = path_visit[path_visit$studyID %in% pt & path_visit$visit %in% visit, "date"]
# })
# earlier_pt_date = unique(c(names(which.min(pt_visit_date)), names(pt_visit_date[grep("-0$", names(pt_visit_date))])))
earlier_pt_date = ""
pt_visit_date = ""
keep_tree = drop.tip(temp_tree, setdiff(names(pt_visit_date), earlier_pt_date))
}
diff = setdiff(temp_tree$tip.label, keep_tree$tip.label)
})
x = 1
temp_tree = first_sts[[x]]
temp_tree_mat = t(sapply(temp_tree$tip.label, FUN = function(x){
cbind(substr(strsplit(x, "-")[[1]][2], 1, 1), strsplit(x, "-")[[1]][3])}))
View(temp_tree_mat)
hi <- "702-3020-0-RVRE_S18_L001"
x <- "702-3020-0-RVRE_S18_L001"
substr(strsplit(x, "-")[[1]][2], 1, 1)
strsplit(x, "-")[[1]][3]
x <- 546-4011-0-RVRE_S58_L001
x <- "546-4011-0-RVRE_S58_L001"
strsplit(x, "-")[[1]][3]
substr(strsplit(x, "-")[[1]][2], 1, 1)
temp_tree$tip.label[1]
locs["PCMP_H100"]
temp_tree_mat = t(sapply(temp_tree$tip.label, FUN = function(x){
cbind(locs[x], pt[x])}))
length(unique(temp_tree_mat[,1])) > 1
if (length(unique(temp_tree_mat[,1])) > 1){
keep_tree = temp_tree
} else if (
sum(temp_tree_mat[,2] != 0) == 0){
keep_tree = temp_tree;
} else if (
sum(temp_tree_mat[,2] == 0) > 0){
drop_tip = temp_tree_mat[temp_tree_mat[,2] != 0,,drop = FALSE]
keep_tree = drop.tip(temp_tree, rownames(drop_tip))
} else if (
length(unique(temp_tree_mat[,2][temp_tree_mat[,2] != 0])) > 0){
earlier_pt_date = ""
pt_visit_date = ""
keep_tree = drop.tip(temp_tree, setdiff(names(pt_visit_date), earlier_pt_date))
}
temp_tree_mat[,1]
length(unique(temp_tree_mat[,1])) > 1
temp_tree_mat = t(sapply(temp_tree$tip.label, FUN = function(x){
cbind(pt[x],locs[x])}))
temp_tree_mat[,1]
length(unique(temp_tree_mat[,1])) > 1
temp_tree_mat[,2]
n_per_pat <- table(temp_tree_mat[,1])
n_per_pat
n_per_pat > 2
n_per_pat[n_per_pat > 2]
n_per_pat[n_per_pat > 1]
#subset to ones > 1
n_per_pat <- n_per_pat[n_per_pat > 1]
i = 1
names(n_per_pat)[i]
rownames(temp_tree_mat) == names(n_per_pat)[i]
temp_tree_mat[,1] == names(n_per_pat)[i]
?indexof
match(temp_tree_mat[,1] == names(n_per_pat)[i])
match(temp_tree_mat[,1], names(n_per_pat)[i])
match(names(n_per_pat)[i], temp_tree_mat[,1])
which(temp_tree_mat[,1] %in% names(n_per_pat)[i])
tips[2:length(tips)]
#find the indexes of all isolates from that patient
tips <- which(temp_tree_mat[,1] %in% names(n_per_pat)[i])
drop_tips <- tips[2:length(tips)]
drop_tips
rownames(drop_tip)
temp_tree_mat[drop_tip]
temp_tree_mat[drop_tips]
temp_tree_mat[drop_tips,]
rownames(temp_tree_mat[drop_tips,])
rownames(temp_tree_mat)[drop_tips,]
rownames(temp_tree_mat)[drop_tips]
#devtools::load_data(pkg = "regentrans")
devtools::install_github('Snitkin-Lab-Umich/regentrans')
library(ape)
library(dplyr)
library(devtools)
library(ggtree)
library(pheatmap)
library(ggplot2)
library(phytools)
library(regentrans)
#set theme
theme_set(theme_bw() + theme(#axis.text.x = element_text(angle=90,vjust = 0.5, hjust = 1),
strip.background = element_rect(fill="white",linetype='blank'), text=element_text(size=15)))
library(ape)
library(dplyr)
library(devtools)
library(ggtree)
library(pheatmap)
library(ggplot2)
library(phytools)
library(regentrans)
#set theme
theme_set(theme_bw() + theme(#axis.text.x = element_text(angle=90,vjust = 0.5, hjust = 1),
strip.background = element_rect(fill="white",linetype='blank'), text=element_text(size=15)))
?dist.dna
snv_dists <- get_snv_dists(dists = regentrans::dists, locs = regentrans::locos, pt = regentrans::pt)
snv_dists <- get_snv_dists(dists = regentrans::dists, locs = regentrans::locs, pt = regentrans::pt)
colors <- c("Intra-facility pair" = "red", "Inter-facility pair" = "blue")
ggplot() +
geom_histogram(data = subset(snv_dists_df_Penn,Pair_Type == "Inter-facility pair" & Pairwise_Dists < 1000), mapping = aes(x = Pairwise_Dists, fill = "Inter-facility pair"), alpha = 0.2) +
geom_histogram(data = subset(snv_dists_df_Penn,Pair_Type == "Intra-facility pair" & Pairwise_Dists < 1000), mapping = aes(x = Pairwise_Dists, fill = "Intra-facility pair"), alpha = 0.5) + labs(x = "Pairwise SNV Distance", y = "Count", fill = "Legend") + scale_color_manual(values = colors) + facet_wrap(~ Loc1, ncol = 4) + ggtitle("All Penn Isolate Pairs < 1000 SNV distance by facility")
snv_dists <- get_snv_dists(dists = regentrans::dists, locs = regentrans::locs, pt = regentrans::pt)
colors <- c("Intra-facility pair" = "red", "Inter-facility pair" = "blue")
ggplot() +
geom_histogram(data = subset(snv_dists,Pair_Type == "Inter-facility pair" & Pairwise_Dists < 1000), mapping = aes(x = Pairwise_Dists, fill = "Inter-facility pair"), alpha = 0.2) +
geom_histogram(data = subset(snv_dists,Pair_Type == "Intra-facility pair" & Pairwise_Dists < 1000), mapping = aes(x = Pairwise_Dists, fill = "Intra-facility pair"), alpha = 0.5) + labs(x = "Pairwise SNV Distance", y = "Count", fill = "Legend") + scale_color_manual(values = colors) + facet_wrap(~ Loc1, ncol = 4) + ggtitle("All Penn Isolate Pairs < 1000 SNV distance by facility")
snv_dists <- get_snv_dists(dists = regentrans::dists, locs = regentrans::locs, pt = regentrans::pt)
colors <- c("Intra-facility pair" = "red", "Inter-facility pair" = "blue")
ggplot() +
geom_histogram(data = subset(snv_dists,Pair_Type == "Inter-facility pair" & Pairwise_Dists < 1000), mapping = aes(x = Pairwise_Dists, fill = "Inter-facility pair"), alpha = 0.2) +
geom_histogram(data = subset(snv_dists,Pair_Type == "Intra-facility pair" & Pairwise_Dists < 1000), mapping = aes(x = Pairwise_Dists, fill = "Intra-facility pair"), alpha = 0.5) + labs(x = "Pairwise SNV Distance", y = "Count", fill = "Legend") +  ggtitle("SNV distances of intra- and inter- facility pairs")
snv_dists <- get_snv_dists(dists = regentrans::dists, locs = regentrans::locs, pt = regentrans::pt)
colors <- c("Intra-facility pair" = "red", "Inter-facility pair" = "blue")
ggplot() +
geom_histogram(data = subset(snv_dists,Pair_Type == "Inter-facility pair" ), mapping = aes(x = Pairwise_Dists, fill = "Inter-facility pair"), alpha = 0.2) +
geom_histogram(data = subset(snv_dists,Pair_Type == "Intra-facility pair" & Pairwise_Dists < 1000), mapping = aes(x = Pairwise_Dists, fill = "Intra-facility pair"), alpha = 0.5) + labs(x = "Pairwise SNV Distance", y = "Count", fill = "Legend") +  ggtitle("SNV distances of intra- and inter- facility pairs")
snv_dists <- get_snv_dists(dists = regentrans::dists, locs = regentrans::locs, pt = regentrans::pt)
colors <- c("Intra-facility pair" = "red", "Inter-facility pair" = "blue")
ggplot() +
geom_histogram(data = subset(snv_dists,Pair_Type == "Inter-facility pair" & Pairwise_Dists < 1000), mapping = aes(x = Pairwise_Dists, fill = "Inter-facility pair"), alpha = 0.2) +
geom_histogram(data = subset(snv_dists,Pair_Type == "Intra-facility pair" & Pairwise_Dists < 1000), mapping = aes(x = Pairwise_Dists, fill = "Intra-facility pair"), alpha = 0.5) + labs(x = "Pairwise SNV Distance", y = "Count", fill = "Legend") +  ggtitle("SNV distances of intra- and inter- facility pairs")
frac_intra <- get_frac_intra(snv_dists = snv_dists) #or get_frac_intra(dists = regentrans::dists, locs = regentrans::locs, pt = regentrans::pt)
View(frac_intra)
frac_intra <- get_frac_intra(snv_dists = snv_dists) #or get_frac_intra(dists = regentrans::dists, locs = regentrans::locs, pt = regentrans::pt)
ggplot(data = frac_intra, aes(x = Thresh, fill = Frac_Intra)) + geom_bar(position = "fill")
frac_intra <- get_frac_intra(snv_dists = snv_dists) #or get_frac_intra(dists = regentrans::dists, locs = regentrans::locs, pt = regentrans::pt)
ggplot(data = frac_intra, aes(x = Thresh, fill = Frac_Intra)) + geom_bar(stat = "identity")
frac_intra <- get_frac_intra(snv_dists = snv_dists) #or get_frac_intra(dists = regentrans::dists, locs = regentrans::locs, pt = regentrans::pt)
ggplot(data = frac_intra, aes(x = Thresh, y = Frac_Intra)) + geom_bar(stat = "identity")
frac_intra <- get_frac_intra(snv_dists = snv_dists) #or get_frac_intra(dists = regentrans::dists, locs = regentrans::locs, pt = regentrans::pt)
ggplot(data = frac_intra, aes(x = Thresh, y = Frac_Intra)) + geom_bar(stat = "identity", fill = "blue") + labs(x = "SNV Distance Threshold", y = "Fraction of Intra-Facility Pairs") +  ggtitle("Fraction of Intra-Facility Pairs at Each SNV Distance Threshold")
frac_intra <- get_frac_intra(snv_dists = snv_dists) #or get_frac_intra(dists = regentrans::dists, locs = regentrans::locs, pt = regentrans::pt)
ggplot(data = frac_intra, aes(x = Thresh, y = Frac_Intra)) + geom_bar(stat = "identity", fill = "blue", alpha = 0.2) + labs(x = "SNV Distance Threshold", y = "Fraction of Intra-Facility Pairs") +  ggtitle("Fraction of Intra-Facility Pairs at Each SNV Distance Threshold")
frac_intra <- get_frac_intra(snv_dists = snv_dists) #or get_frac_intra(dists = regentrans::dists, locs = regentrans::locs, pt = regentrans::pt)
ggplot(data = frac_intra, aes(x = Thresh, y = Frac_Intra)) + geom_bar(stat = "identity", fill = "blue", alpha = 0.5) + labs(x = "SNV Distance Threshold", y = "Fraction of Intra-Facility Pairs") +  ggtitle("Fraction of Intra-Facility Pairs at Each SNV Distance Threshold")
frac_intra <- get_frac_intra(snv_dists = snv_dists) #or get_frac_intra(dists = regentrans::dists, locs = regentrans::locs, pt = regentrans::pt)
ggplot(data = frac_intra, aes(x = Thresh, y = Frac_Intra)) + geom_bar(stat = "identity", fill = "blue", alpha = 0.5) + labs(x = "SNV Distance Threshold", y = "Fraction of Intra-Facility Pairs") +  ggtitle("Fraction of Intra-Facility Pairs \nat Each SNV Distance Threshold")
frac_intra <- get_frac_intra(snv_dists = snv_dists) #or get_frac_intra(dists = regentrans::dists, locs = regentrans::locs, pt = regentrans::pt)
ggplot(data = frac_intra, aes(x = Thresh, y = Frac_Intra)) + geom_bar(stat = "identity", fill = "blue", alpha = 0.5) + labs(x = "SNV Distance Threshold", y = "Fraction of Intra-Facility Pairs") +  ggtitle("Fraction Isolate Pairs From The Same Facility \nat Each SNV Distance Threshold")
library(gridExtra)
frac_intra <- get_frac_intra(snv_dists = snv_dists) #or get_frac_intra(dists = regentrans::dists, locs = regentrans::locs, pt = regentrans::pt)
frac_intra_plot <- ggplot(data = frac_intra, aes(x = Thresh, y = Frac_Intra)) + geom_bar(stat = "identity", fill = "blue", alpha = 0.5) + labs(x = "SNV Distance Threshold", y = "Fraction of Intra-Facility Pairs") +  ggtitle("Fraction of Isolate Pairs from the Same Facility \nat Each SNV Distance Threshold") + ylim(0, 1)
frac_inter_plot <- ggplot(data = frac_intra, aes(x = Thresh, y = Frac_Inter)) + geom_bar(stat = "identity", fill = "red", alpha = 0.5) + labs(x = "SNV Distance Threshold", y = "Fraction of Inter-Facility Pairs") +  ggtitle("Fraction of Isolate Pairs from \nDifferent Facilities at Each SNV Distance Threshold") + ylim(0, 1)
grid.arrange(frac_intra_plot, frac_inter_plot, ncol=2)
frac_intra <- get_frac_intra(snv_dists = snv_dists) #or get_frac_intra(dists = regentrans::dists, locs = regentrans::locs, pt = regentrans::pt)
frac_intra_plot <- ggplot(data = frac_intra, aes(x = Thresh, y = Frac_Intra)) + geom_bar(stat = "identity", fill = "blue", alpha = 0.5) + labs(x = "SNV Distance Threshold", y = "Fraction of Intra-Facility Pairs") +  ggtitle("Fraction of Isolate Pairs from the Same Facility \nat Each SNV Distance Threshold") + ylim(0, 1) + theme(plot.title = element_text(size = 10))
frac_inter_plot <- ggplot(data = frac_intra, aes(x = Thresh, y = Frac_Inter)) + geom_bar(stat = "identity", fill = "red", alpha = 0.5) + labs(x = "SNV Distance Threshold", y = "Fraction of Inter-Facility Pairs") +  ggtitle("Fraction of Isolate Pairs from \nDifferent Facilities at Each SNV Distance Threshold") + ylim(0, 1) + theme(plot.title = element_text(size = 10))
grid.arrange(frac_intra_plot, frac_inter_plot, ncol=2)
clusters <- get_clusters(regentrans::tr,regentrans::locs)
#dissect output
pure_subtree_info <- clusters$pure_subtree_info
subtrees <- clusters$subtrees
ggplot(data = pure_subtree_info, aes(x = f_id, y = subtr_size)) + geom_jitter(position = position_jitter(width = 0.2, height = 0.1), alpha = 0.2) + labs(y = "Number of Isolates in \nPhylogenetic Cluster", x = "Facility ID", title = "Pure Subtree Information")
ggplot(data = pure_subtree_info, aes(x = f_id, y = subtr_size)) + geom_jitter(position = position_jitter(width = 0.2, height = 0.1), alpha = 0.2, fill = "blue") + labs(y = "Number of Isolates in \nPhylogenetic Cluster", x = "Facility ID", title = "Pure Subtree Information")
ggplot(data = pure_subtree_info, aes(x = f_id, y = subtr_size, fill = "blue")) + geom_jitter(position = position_jitter(width = 0.2, height = 0.1), alpha = 0.2) + labs(y = "Number of Isolates in \nPhylogenetic Cluster", x = "Facility ID", title = "Pure Subtree Information")
ggplot(data = pure_subtree_info, aes(x = f_id, y = subtr_size)) + geom_jitter(position = position_jitter(width = 0.2, height = 0.1), alpha = 0.2, color = "blue") + labs(y = "Number of Isolates in \nPhylogenetic Cluster", x = "Facility ID", title = "Pure Subtree Information")
mpr_tree = midpoint.root(regentrans::tr)
gheatmap(ggtree(mpr_tree, layout = "circular"),as.data.frame(regentrans::locs), color = NA)
mpr_tree = midpoint.root(regentrans::tr)
gheatmap(ggtree(mpr_tree, layout = "circular"),as.data.frame(regentrans::locs), color = NA) + title("Phylogenetic Tree Annotated by Location")
mat <- data.frame(matrix(data = c(0, 20, 12,
20, 0, 26,
30, 26, 0), nrow = 3, ncol = 3))
rownames(mat) <- c("A", "B", "C")
colnames(mat) <- c("A", "B", "C")
pat_flow <- na.omit(data.frame(as.table(as.matrix(mat))))
#pat_flow <- dplyr::bind_cols(pat_flow %>% filter(Var1 != Var2))
colnames(pat_flow) <- c("source_facil", "dest_facil", "n_transfers")
pat_flow$n_transfers <- as.numeric(pat_flow$n_transfers)
pat_flow
pt_trans <- patient_transfer(pt_trans_net = pat_flow, snv_dists = snv_dists)
pt_trans
ggplot(data = pt_trans, mapping = aes(x = n_transfers, y = n_closely_related_pairs)) + geom_point()
snv_dists
#for now
mat <- data.frame(matrix(data = c(0, 20, 30, 40,
20, 0, 26, 50,
30, 26, 0, 57,
40, 50, 57, 0), nrow = 4, ncol = 4))
rownames(mat) <- c("A", "B", "C", "D")
colnames(mat) <- c("A", "B", "C", "D")
test_pt_trans_net <- na.omit(data.frame(as.table(as.matrix(mat))))
#pat_flow <- dplyr::bind_cols(pat_flow %>% filter(Var1 != Var2))
colnames(test_pt_trans_net) <- c("source_facil", "dest_facil", "n_transfers")
test_pt_trans_net$n_transfers <- as.numeric(test_pt_trans_net$n_transfers)
pt_trans <- patient_transfer(pt_trans_net = pat_flow, snv_dists = snv_dists)
ggplot(data = pt_trans, mapping = aes(x = n_transfers, y = n_closely_related_pairs)) + geom_point()
pt_trans
pat_flow
pt_trans <- patient_transfer(pt_trans_net = test_pt_trans_net, snv_dists = snv_dists)
ggplot(data = pt_trans, mapping = aes(x = n_transfers, y = n_closely_related_pairs)) + geom_point()
ggplot(data = pt_trans, mapping = aes(x = n_transfers, y = n_closely_related_pairs)) + geom_point(color = "blue", alpha = 0.2) + labs(y = "Number of Patient Transfers from Facility \nvs. Number of Closely Related Isolate Pairs at Facility", x = "Number of Transfers", title = "Number of Closely Related Isolate Pairs")
ggplot(data = pt_trans, mapping = aes(x = n_transfers, y = n_closely_related_pairs)) + geom_point(color = "blue", alpha = 0.5) + labs(y = "Number of Patient Transfers from Facility \nvs. Number of Closely Related Isolate Pairs at Facility", x = "Number of Transfers", title = "Number of Closely Related Isolate Pairs")
ggplot(data = pt_trans, mapping = aes(x = n_transfers, y = n_closely_related_pairs)) + geom_point(color = "blue", alpha = 0.5) + labs(y = "Number of Closely Related Isolate Pairs", x = "Number of Transfers", title = "Number of Patient Transfers from Facility \nvs. Number of Closely Related Isolate Pairs at Facility")
?get_clusters()
frac_intra
snv_dists
snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1) %>% summarize(n = n())
cutoff <- 20
snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1) %>% summarize(n = n())
snv_dists
snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())
snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n()) %>% ggplot(aes(x = Loc1, y = n)) %>% geom_point(alpha = .5, fill = Pair_Type)
snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n())
snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n()) %>% ggplot(aes(x = Loc1, y = n, color = Pair_Type)) %>% geom_point(alpha = .5)
snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n()) %>% ggplot(aes(x = Loc1, y = n, color = Pair_Type)) + geom_point(alpha = .5)
snv_dists %>% filter(Pairwise_Dists <= cutoff) %>% group_by(Loc1, Pair_Type) %>% summarize(n = n()) %>% ggplot(aes(x = Loc1, y = n, color = Pair_Type)) + geom_point(alpha = .5) + labs(y = "Number of Closely Related Isolate Pairs", x = "Facility ID", title = "Number of Closely Related Isolate Pairs by Facility")
#metadata path Penn
#/nfs/turbo/umms-esnitkin/Project_Penn_KPC/Analysis/regentrans_data/2021-02-16_subset-data/data/ltach-metadata.csv
metadata <- read.csv("/Users/sophiehoffman/Desktop/gl_mount/Project_Penn_KPC/Analysis/regentrans_data/2021-02-16_subset-data/data/ltach-metadata.csv")
#alignment path Penn
#/nfs/turbo/umms-esnitkin/Project_Penn_KPC/Sequence_data/2021_02_10_Penn_All_variant_calling/2021_02_12_08_34_28_core_results/gubbins/2021_02_12_08_34_28_KPNIH1_genome_aln_w_alt_allele_unmapped.filtered_polymorphic_sites.fasta
fasta <- ape::read.dna("/Users/sophiehoffman/Desktop/gl_mount/Project_Penn_KPC/Sequence_data/2021_02_10_Penn_All_variant_calling/2021_02_12_08_34_28_core_results/gubbins/2021_02_12_08_34_28_KPNIH1_genome_aln_w_alt_allele_unmapped.filtered_polymorphic_sites.fasta",
format = "fasta")
#tree path Penn
#/nfs/turbo/umms-esnitkin/Project_Penn_KPC/Sequence_data/2021_02_10_Penn_All_variant_calling/2021_02_12_08_34_28_core_results/gubbins/iqtree_masked_wga/2021_02_12_08_34_28_KPNIH1_genome_aln_w_alt_allele_unmapped.treefile
tr <- ape::read.tree("/Users/sophiehoffman/Desktop/gl_mount/Project_Penn_KPC/Sequence_data/2021_02_10_Penn_All_variant_calling/2021_02_12_08_34_28_core_results/gubbins/iqtree_masked_wga/2021_02_12_08_34_28_KPNIH1_genome_aln_w_alt_allele_unmapped.treefile")
View(metadata)
#st info
st <- read.csv("/Users/sophiehoffman/Desktop/gl_mount/Project_Penn_KPC/Sequence_data/Reports/kleborate/penn_kleborate_results.txt", sep = "\t")
View(st)
tr$tip.label
#join st and metadata
metadata_penn$isolate_no <- paste0("PCMP_H", metadata_penn$isolate_no)
#join st and metadata
metadata$isolate_no <- paste0("PCMP_H", metadata$isolate_no)
metadata_2 <- metadata %>% left_join(st, by = c("isolate_no" = "strain")) %>% filter(ST == "ST258") #%>% select(ID, locs_Penn_tr_sub)
#####3/30/21 full data subset
library(dplyr)
metadata_2 <- metadata %>% left_join(st, by = c("isolate_no" = "strain")) %>% filter(ST == "ST258") #%>% select(ID, locs_Penn_tr_sub)
View(metadata_2)
metadata <- metadata %>% left_join(st, by = c("isolate_no" = "strain")) %>% filter(ST == "ST258") %>% select(isolate_no, patient_id, ltach, cx_date)
substr(metadata$cx_date, 1, 5)
substr(metadata$cx_date, 1, 4)
#subset date to year
metadata$cx_date <- substr(metadata$cx_date, 1, 4)
rownames(fasta)
tr$tip.label
locs <- metadata$ltach
names(locs) <- metadata$isolate_no
locs
pt <- metadata$patient_id
names(pt) <- metadata$isolate_no
pt
dates <- metadata$cx_date
names(dates) <- metadata$isolate_no
dates
#make date
dates <- as.Date(metadata$cx_date)
?as.Date
#make date
dates <- as.Date(metadata$cx_date, "%y")
names(dates) <- metadata$isolate_no
dates
#make date
dates <- as.factor(metadata$cx_date)
names(dates) <- metadata$isolate_no
dates
common <- intersect(names(locs), rownames(fasta))
locs_sub <- locs[names(locs) %in% common]
pt_sub <- pt[names(pt) %in% common]
dates_sub <- dates[names(dates) %in% common]
#subset fasta
common <- intersect(intersect(names(locs), rownames(fasta)), tr$tip.label)
locs_sub <- locs[names(locs) %in% common]
pt_sub <- pt[names(pt) %in% common]
dates_sub <- dates[names(dates) %in% common]
fasta_sub<-fasta[common,]
common
#subset the tree using keep.tip
tr_sub <- keep.tip(tr,common)
library(ape)
#subset the tree using keep.tip
tr_sub <- keep.tip(tr,common)
#make dists
dists <- dist.dna(x = fasta_sub, as.matrix = TRUE, model = "N", pairwise.deletion = TRUE)
locs <- locs_sub
pt <- pt_sub
dates <- dates_sub
fasta <- fasta_sub
tr <- tr_sub
locs
pt
dates
length(dates)
nrow(fasta)
length(tr$tip.label)
save(locs, file="/Users/sophiehoffman/Desktop/regentrans/data/locs.RData")
save(pt, file="/Users/sophiehoffman/Desktop/regentrans/data/pt.RData")
save(dates, file="/Users/sophiehoffman/Desktop/regentrans/data/dates.RData")
save(fasta, file="/Users/sophiehoffman/Desktop/regentrans/data/fasta.RData")
save(dists, file="/Users/sophiehoffman/Desktop/regentrans/data/dists.RData")
save(tr, file="/Users/sophiehoffman/Desktop/regentrans/data/tr.RData")
#make a pt flow function
unique(locs)
#make a pt flow function
library(Matrix)
x<-Matrix(20:100,length(unique(locs)))
x<-Matrix(sample(20:100, length(unique(locs)), replace=TRUE),length(unique(locs)))
x
View(x)
x<-Matrix(sample(20:100, length(unique(locs))^2, replace=TRUE),length(unique(locs)))
x
X<-forceSymmetric(x)
X
diag(X) <- 0
X
x<-Matrix(sample(20:100, length(unique(locs))^2, replace=TRUE),length(unique(locs)))
x
diag(x) <- 0
x
x <- as.data.frame(x)
rownames(x) <- unique(locs)
colnames(x) <- unique(locs)
x
pat_flow <- na.omit(data.frame(as.table(as.matrix(mat))))
pat_flow <- na.omit(data.frame(as.table(as.matrix(x))))
pat_flow
#pat_flow <- dplyr::bind_cols(pat_flow %>% filter(Var1 != Var2))
colnames(pat_flow) <- c("source_facil", "dest_facil", "n_transfers")
pat_flow$n_transfers <- as.numeric(pat_flow$n_transfers)
pt_flow <- pat_flow
save(pt_flow, file="/Users/sophiehoffman/Desktop/regentrans/data/pt_flow.RData")
load_all()
library(ape)
library(dplyr)
library(devtools)
library(ggtree)
library(pheatmap)
library(ggplot2)
library(phytools)
library(gridExtra)
load_all()
library(ape)
library(dplyr)
library(devtools)
library(ggtree)
library(pheatmap)
library(ggplot2)
library(phytools)
#library(regentrans)
library(gridExtra)
load_all()
#set theme
theme_set(theme_bw() + theme(#axis.text.x = element_text(angle=90,vjust = 0.5, hjust = 1),
strip.background = element_rect(fill="white",linetype='blank'), text=element_text(size=15)))
regentrans::pt_flow
#for now
pt_trans <- patient_transfer(pt_trans_net = regentrans::pt_flow, snv_dists = snv_dists)
#TODO subset where I won't have to use pairwise dists < 1000, update the test data to only one ST.
snv_dists <- get_snv_dists(dists = regentrans::dists, locs = regentrans::locs, pt = regentrans::pt)
colors <- c("Intra-facility pair" = "red", "Inter-facility pair" = "blue")
ggplot() +
geom_histogram(data = subset(snv_dists,Pair_Type == "Inter-facility pair"), mapping = aes(x = Pairwise_Dists, fill = "Inter-facility pair"), alpha = 0.2) +
geom_histogram(data = subset(snv_dists,Pair_Type == "Intra-facility pair"), mapping = aes(x = Pairwise_Dists, fill = "Intra-facility pair"), alpha = 0.5) + labs(x = "Pairwise SNV Distance", y = "Count", fill = "Legend") +  ggtitle("SNV distances of intra- and inter- facility pairs")
colors <- c("Intra-facility pair" = "red", "Inter-facility pair" = "blue")
ggplot() +
geom_histogram(data = subset(snv_dists,Pair_Type == "Inter-facility pair" & Pairwise_Di), mapping = aes(x = Pairwise_Dists, fill = "Inter-facility pair"), alpha = 0.2) +
geom_histogram(data = subset(snv_dists,Pair_Type == "Intra-facility pair"), mapping = aes(x = Pairwise_Dists, fill = "Intra-facility pair"), alpha = 0.5) + labs(x = "Pairwise SNV Distance", y = "Count", fill = "Legend") +  ggtitle("SNV distances of intra- and inter- facility pairs")
colors <- c("Intra-facility pair" = "red", "Inter-facility pair" = "blue")
ggplot() +
geom_histogram(data = subset(snv_dists,Pair_Type == "Inter-facility pair" & Pairwise_Dists < 20), mapping = aes(x = Pairwise_Dists, fill = "Inter-facility pair"), alpha = 0.2) +
geom_histogram(data = subset(snv_dists,Pair_Type == "Intra-facility pair" & Pairwise_Dists < 20), mapping = aes(x = Pairwise_Dists, fill = "Intra-facility pair"), alpha = 0.5) + labs(x = "Pairwise SNV Distance", y = "Count", fill = "Legend") +  ggtitle("SNV distances of intra- and inter- facility pairs")
snv_dists <- get_snv_dists(dists = regentrans::dists, locs = regentrans::locs, pt = regentrans::pt)
colors <- c("Intra-facility pair" = "red", "Inter-facility pair" = "blue")
ggplot() +
geom_histogram(data = subset(snv_dists,Pair_Type == "Inter-facility pair"), mapping = aes(x = Pairwise_Dists, fill = "Inter-facility pair"), alpha = 0.2) +
geom_histogram(data = subset(snv_dists,Pair_Type == "Intra-facility pair"), mapping = aes(x = Pairwise_Dists, fill = "Intra-facility pair"), alpha = 0.2) + labs(x = "Pairwise SNV Distance", y = "Count", fill = "Legend") +  ggtitle("SNV distances of intra- and inter- facility pairs")
snv_dists <- get_snv_dists(dists = regentrans::dists, locs = regentrans::locs, pt = regentrans::pt)
colors <- c("Intra-facility pair" = "red", "Inter-facility pair" = "blue")
ggplot() +
geom_histogram(data = subset(snv_dists,Pair_Type == "Inter-facility pair"), mapping = aes(x = Pairwise_Dists, fill = "Inter-facility pair"), alpha = 0.2) +
geom_histogram(data = subset(snv_dists,Pair_Type == "Intra-facility pair"), mapping = aes(x = Pairwise_Dists, fill = "Intra-facility pair"), alpha = 0.5) + labs(x = "Pairwise SNV Distance", y = "Count", fill = "Legend") +  ggtitle("SNV distances of intra- and inter- facility pairs")
ggplot() +
geom_histogram(data = subset(snv_dists,Pair_Type == "Inter-facility pair" & Pairwise_Dists < 20), mapping = aes(x = Pairwise_Dists, fill = "Inter-facility pair"), alpha = 0.2, binwidth = 1) +
geom_histogram(data = subset(snv_dists,Pair_Type == "Intra-facility pair" & Pairwise_Dists < 20), mapping = aes(x = Pairwise_Dists, fill = "Intra-facility pair"), alpha = 0.2, binwidth = 1) + labs(x = "Pairwise SNV Distance", y = "Count", fill = "Legend") +  ggtitle("SNV distances of intra- and inter- facility pairs")
ggplot() +
geom_histogram(data = subset(snv_dists,Pair_Type == "Inter-facility pair" & Pairwise_Dists < 20), mapping = aes(x = Pairwise_Dists, fill = "Inter-facility pair"), alpha = 0.2, binwidth = 1) +
geom_histogram(data = subset(snv_dists,Pair_Type == "Intra-facility pair" & Pairwise_Dists < 20), mapping = aes(x = Pairwise_Dists, fill = "Intra-facility pair"), alpha = 0.4, binwidth = 1) + labs(x = "Pairwise SNV Distance", y = "Count", fill = "Legend") +  ggtitle("SNV distances of intra- and inter- facility pairs")
ggplot() +
geom_histogram(data = subset(snv_dists,Pair_Type == "Inter-facility pair"), mapping = aes(x = Pairwise_Dists, fill = "Inter-facility pair"), alpha = 0.2) +
geom_histogram(data = subset(snv_dists,Pair_Type == "Intra-facility pair"), mapping = aes(x = Pairwise_Dists, fill = "Intra-facility pair"), alpha = 0.4) + labs(x = "Pairwise SNV Distance", y = "Count", fill = "Legend") +  ggtitle("SNV distances of intra- and inter- facility pairs")
ggplot() +
geom_histogram(data = subset(snv_dists,Pair_Type == "Inter-facility pair" & Pairwise_Dists < 20), mapping = aes(x = Pairwise_Dists, fill = "Inter-facility pair"), alpha = 0.2, binwidth = 1) +
geom_histogram(data = subset(snv_dists,Pair_Type == "Intra-facility pair" & Pairwise_Dists < 20), mapping = aes(x = Pairwise_Dists, fill = "Intra-facility pair"), alpha = 0.4, binwidth = 1) + labs(x = "Pairwise SNV Distance", y = "Count", fill = "Legend") +  ggtitle("SNV distances of intra- and inter- facility pairs \n< 20 SNV Distance")
ggplot(data = pt_trans, mapping = aes(x = n_transfers, y = n_closely_related_pairs)) + geom_jitter(position = position_jitter(width = 0.2, height = 0.1), alpha = 0.2, color = "blue") + labs(y = "Number of Closely Related Isolate Pairs", x = "Number of Transfers", title = "Number of Patient Transfers from Facility \nvs. Number of Closely Related Isolate Pairs at Facility")
#for now
pt_trans <- patient_transfer(pt_trans_net = pt_flow, snv_dists = snv_dists)
ggplot(data = pt_trans, mapping = aes(x = n_transfers, y = n_closely_related_pairs)) + geom_jitter(position = position_jitter(width = 0.2, height = 0.1), alpha = 0.2, color = "blue") + labs(y = "Number of Closely Related Isolate Pairs", x = "Number of Transfers", title = "Number of Patient Transfers from Facility \nvs. Number of Closely Related Isolate Pairs at Facility")
View(pt_trans)
ggplot(data = data = subset(pt_trans,n_closely_related_pairs > 0), mapping = aes(x = n_transfers, y = n_closely_related_pairs)) + geom_jitter(position = position_jitter(width = 0.2, height = 0.1), alpha = 0.2, color = "blue") + labs(y = "Number of Closely Related Isolate Pairs", x = "Number of Transfers", title = "Number of Patient Transfers from Facility \nvs. Number of Closely Related Isolate Pairs at Facility")
ggplot(data = subset(pt_trans,n_closely_related_pairs > 0), mapping = aes(x = n_transfers, y = n_closely_related_pairs)) + geom_jitter(position = position_jitter(width = 0.2, height = 0.1), alpha = 0.2, color = "blue") + labs(y = "Number of Closely Related Isolate Pairs", x = "Number of Transfers", title = "Number of Patient Transfers from Facility \nvs. Number of Closely Related Isolate Pairs at Facility")
library(ape)
library(dplyr)
library(devtools)
library(ggtree)
library(pheatmap)
library(ggplot2)
library(phytools)
library(regentrans)
library(gridExtra)
#set theme
theme_set(theme_bw() + theme(#axis.text.x = element_text(angle=90,vjust = 0.5, hjust = 1),
strip.background = element_rect(fill="white",linetype='blank'), text=element_text(size=15)))
#make up coordinates, plot them with size based on number of isolates
devtools::install_github('Snitkin-Lab-Umich/regentrans')
View(snv_dists)
library(ape)
library(dplyr)
library(devtools)
library(ggtree)
library(pheatmap)
library(ggplot2)
library(phytools)
library(gridExtra)
library(regentrans)
#set theme
theme_set(theme_bw() + theme(#axis.text.x = element_text(angle=90,vjust = 0.5, hjust = 1),
strip.background = element_rect(fill="white",linetype='blank'), text=element_text(size=15)))
snv_dists <- get_snv_dists(dists = dists, locs = locs, pt = pt) %>% subset_pairs()
colors <- c("Intra-facility pair" = "red", "Inter-facility pair" = "blue")
ggplot() +
geom_histogram(data = subset(snv_dists,Pair_Type == "Inter-facility pair"), mapping = aes(x = Pairwise_Dists, fill = "Inter-facility pair"), alpha = 0.2) +
geom_histogram(data = subset(snv_dists,Pair_Type == "Intra-facility pair"), mapping = aes(x = Pairwise_Dists, fill = "Intra-facility pair"), alpha = 0.4) + labs(x = "Pairwise SNV Distance", y = "Count", fill = "Legend") +  ggtitle("SNV distances of intra- and inter- facility pairs")
snv_dists <- get_snv_dists(dists = dists, locs = locs, pt = pt)
frac_intra <- get_frac_intra(snv_dists = snv_dists) #or get_frac_intra(dists = dists, locs = locs, pt = pt)
frac_intra_plot <- ggplot(data = frac_intra, aes(x = Thresh, y = Frac_Intra)) + geom_bar(stat = "identity", fill = "blue", alpha = 0.5) + labs(x = "SNV Distance Threshold", y = "Fraction of Intra-Facility Pairs") +  ggtitle("Fraction of Isolate Pairs from the Same \nFacility at Each SNV Distance Threshold") + ylim(0, 1) + theme(plot.title = element_text(size = 10))
frac_inter_plot <- ggplot(data = frac_intra, aes(x = Thresh, y = Frac_Inter)) + geom_bar(stat = "identity", fill = "red", alpha = 0.5) + labs(x = "SNV Distance Threshold", y = "Fraction of Inter-Facility Pairs") +  ggtitle("Fraction of Isolate Pairs from Different \nFacilities at Each SNV Distance Threshold") + ylim(0, 1) + theme(plot.title = element_text(size = 10))
grid.arrange(frac_intra_plot, frac_inter_plot, ncol=2)
View(frac_intra)
clusters <- get_clusters(tr,locs, pureness = 1)
#dissect output
pure_subtree_info <- clusters$pure_subtree_info
subtrees <- clusters$subtrees
ggplot(data = pure_subtree_info, aes(x = f_id, y = subtr_size)) + geom_jitter(position = position_jitter(width = 0.2, height = 0.1), alpha = 0.2, color = "blue") + labs(y = "Number of Isolates in \nPhylogenetic Cluster", x = "Facility ID", title = "Pure Subtree Information")
View(clusters)
View(pure_subtree_info)
?get_clusters
pt_trans <- patient_transfer(pt_trans_net = pt_flow, snv_dists = snv_dists)
ggplot(data = pt_trans, mapping = aes(x = n_transfers, y = n_closely_related_pairs)) + geom_jitter(position = position_jitter(width = 0.2, height = 0.1), alpha = 0.2, color = "blue") + labs(y = "Number of Closely Related Isolate Pairs", x = "Number of Transfers", title = "Number of Patient Transfers from Facility \nvs. Number of Closely Related Isolate Pairs at Facility")
View(pt_trans)
?patient_transfer
ggplot() +
geom_histogram(data = subset(snv_dists_sub,Pair_Type == "Inter-facility pair" & Pairwise_Dists < 20), mapping = aes(x = Pairwise_Dists, fill = "Inter-facility pair"), alpha = 0.2, binwidth = 1) +
geom_histogram(data = subset(snv_dists_sub,Pair_Type == "Intra-facility pair" & Pairwise_Dists < 20), mapping = aes(x = Pairwise_Dists, fill = "Intra-facility pair"), alpha = 0.4, binwidth = 1) + labs(x = "Pairwise SNV Distance", y = "Count", fill = "Legend") +  ggtitle("SNV distances of intra- and inter- facility pairs \n< 20 SNV Distance")
snv_dists_sub <- subset_pairs(snv_dists)
colors <- c("Intra-facility pair" = "red", "Inter-facility pair" = "blue")
ggplot() +
geom_histogram(data = subset(snv_dists_sub,Pair_Type == "Inter-facility pair"), mapping = aes(x = Pairwise_Dists, fill = "Inter-facility pair"), alpha = 0.2) +
geom_histogram(data = subset(snv_dists_sub,Pair_Type == "Intra-facility pair"), mapping = aes(x = Pairwise_Dists, fill = "Intra-facility pair"), alpha = 0.4) + labs(x = "Pairwise SNV Distance", y = "Count", fill = "Legend") +  ggtitle("SNV distances of intra- and inter- facility pairs")
ggplot() +
geom_histogram(data = subset(snv_dists_sub,Pair_Type == "Inter-facility pair" & Pairwise_Dists < 20), mapping = aes(x = Pairwise_Dists, fill = "Inter-facility pair"), alpha = 0.2, binwidth = 1) +
geom_histogram(data = subset(snv_dists_sub,Pair_Type == "Intra-facility pair" & Pairwise_Dists < 20), mapping = aes(x = Pairwise_Dists, fill = "Intra-facility pair"), alpha = 0.4, binwidth = 1) + labs(x = "Pairwise SNV Distance", y = "Count", fill = "Legend") +  ggtitle("SNV distances of intra- and inter- facility pairs \n< 20 SNV Distance")
