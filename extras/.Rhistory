filter(n != 0)
vcts
cts
cts <- isolate_info %>%
mutate(kfoc_disrupted_clade = factor(ifelse(kfoc_disrupted_clade, 'Clade IIB', 'Other clade'), levels = c('Clade IIB', 'Other clade')),
#col_grp = factor(col_grp, levels = c('S non-revertant', 'S revertant', 'R cluster', 'R singleton')),
colistin30 = str_to_sentence(colistin30)) %>%
filter(!is.na(col_grp)) %>%
group_by(col_grp, kfoc_disrupted_clade) %>%
summarize(n=sum(colistin30=='Yes'),tot=length(colistin30)) %>%
filter(n != 0)
cts
vcts <- isolate_info %>%
mutate(var_ct=factor(ifelse(var_ct < 3, var_ct, '≥3'), levels = c(0,1,2,'≥3'))) %>%
mutate(colistin_disc = factor(colistin_disc, levels = c('R', 'S'))) %>%
group_by(colistin_disc, var_ct) %>%
summarize(n=sum(colistin_disc=='R'),tot=length(colistin_disc)) %>%
filter(n != 0)
vcts
cts
isolate_info %>%
mutate(var_ct=factor(ifelse(var_ct < 3, var_ct, '≥3'), levels = c(0,1,2,'≥3'))) %>%
mutate(colistin_disc = factor(colistin_disc, levels = c('R', 'S'))) %>%
group_by(colistin_disc, var_ct)
vcts <- isolate_info %>%
mutate(var_ct=factor(ifelse(var_ct < 3, var_ct, '≥3'), levels = c(0,1,2,'≥3'))) %>%
mutate(colistin_disc = factor(colistin_disc, levels = c('R', 'S'))) %>%
group_by(colistin_disc, var_ct) %>%
summarize(n=sum(colistin_disc=='R'),tot=length(colistin_disc)) %>%
filter(n != 0)
vcts <- isolate_info %>%
mutate(var_ct=factor(ifelse(var_ct < 3, var_ct, '≥3'), levels = c(0,1,2,'≥3'))) %>%
mutate(colistin_disc = factor(colistin_disc, levels = c('R', 'S'))) %>%
group_by(colistin_disc, var_ct) %>%
summarize(n=sum(colistin_disc=='R'),tot=length(colistin_disc)) #%>%
vcts
vcts <- isolate_info %>%
mutate(var_ct=factor(ifelse(var_ct < 3, var_ct, '≥3'), levels = c(0,1,2,'≥3'))) %>%
mutate(colistin_disc = factor(colistin_disc, levels = c('R', 'S'))) %>%
group_by(var_ct) %>%
summarize(n=sum(colistin_disc=='R'),tot=length(colistin_disc)) #%>%
vcts
isolate_info %>%
mutate(var_ct=factor(ifelse(var_ct < 3, var_ct, '≥3'), levels = c(0,1,2,'≥3'))) %>%
ggplot(aes(x=var_ct, y=(..count..)/sum(..count..), fill=Resistance)) +
geom_bar(alpha=0.7, position='identity')
isolate_info %>%
mutate(var_ct=factor(ifelse(var_ct < 3, var_ct, '≥3'), levels = c(0,1,2,'≥3'))) %>%
ggplot(aes(x=var_ct, y=(..count..)/sum(..count..), fill=colistin_disc)) +
geom_bar(alpha=0.7, position='identity')
isolate_info %>%
mutate(var_ct=factor(ifelse(var_ct < 3, var_ct, '≥3'), levels = c(0,1,2,'≥3'))) %>%
ggplot(aes(x=var_ct, y=(..count..)/sum(..count..), fill=colistin_disc)) +
geom_bar(alpha=0.7, position='dodge')
f1a <- isolate_info %>%
mutate(var_ct=factor(ifelse(var_ct < 3, var_ct, '≥3'), levels = c(0,1,2,'≥3'))) %>%
ggplot(aes(x = var_ct, (..count..)/sum(..count..), fill = colistin_disc)) +
geom_bar(position=position_dodge2(preserve = "single"), color = 'white') +
geom_bar(position=position_dodge2(preserve = "single")) +
scale_fill_manual(values = adjustcolor(colors, alpha = 0.75),
labels = c('Resistant','Susceptible')) +
labs(x = 'Number of variants in resistance genes', y = 'Number of isolates', fill = 'Colistin')
f1a
f1a <- isolate_info %>%
mutate(var_ct=factor(ifelse(var_ct < 3, var_ct, '≥3'), levels = c(0,1,2,'≥3'))) %>%
ggplot(aes(x = var_ct, (..count..)/sum(..count..), fill = colistin_disc)) +
geom_bar(position=position_dodge2(preserve = "single"), color = 'white') +
geom_bar(position=position_dodge2(preserve = "single")) +
scale_fill_manual(values = adjustcolor(colors, alpha = 0.75),
labels = c('Resistant','Susceptible')) +
labs(x = 'Number of variants in resistance genes', y = 'Fraction of isolates', fill = 'Colistin')
f1a
cts <- isolate_info %>%
mutate(kfoc_disrupted_clade = factor(ifelse(kfoc_disrupted_clade, 'Clade IIB', 'Other clade'), levels = c('Clade IIB', 'Other clade')),
#col_grp = factor(col_grp, levels = c('S non-revertant', 'S revertant', 'R cluster', 'R singleton')),
colistin30 = str_to_sentence(colistin30)) %>%
filter(!is.na(col_grp)) %>%
group_by(col_grp, kfoc_disrupted_clade) %>%
summarize(n=sum(colistin30=='Yes'),tot=length(colistin30)) %>%
filter(n != 0)
cts$frac <- sapply(1:nrow(cts), function(x){
colgrp <- cts$col_grp[x]
cts$n[x]/sum(cts$tot[cts$col_grp == colgrp])
})
f4a <- cts %>% ggplot(aes(x = col_grp, y = frac, fill = kfoc_disrupted_clade)) + geom_col(position = position_stack(reverse = TRUE), width = 0.5) +  #scale_fill_manual(values = c(Yes='black',No='white')) +
labs(x = '', y = 'Fraction of patients that have taken\ncolistin in the past 30 days', fill = '') +
scale_fill_manual(values = c('dimgrey','darkgrey'))  + #facet_grid(kfoc_disrupted_clade~., space = 'free', scales = 'free') +
#guides(x = guide_axis(angle = 45)) +
coord_flip() + theme(legend.position = 'top')
#theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 0.5)) # + facet_wrap(~kfoc_disrupted_clade)
f4a
cts <- isolate_info %>%
mutate(var_ct=factor(ifelse(var_ct < 3, var_ct, '≥3'), levels = c(0,1,2,'≥3'))) %>%
group_by(col_disc, var_ct) %>%
summarize(n=count())
cts <- isolate_info %>%
mutate(var_ct=factor(ifelse(var_ct < 3, var_ct, '≥3'), levels = c(0,1,2,'≥3'))) %>%
group_by(coistinl_disc, var_ct) %>%
summarize(n=count())
cts <- isolate_info %>%
mutate(var_ct=factor(ifelse(var_ct < 3, var_ct, '≥3'), levels = c(0,1,2,'≥3'))) %>%
group_by(coistin_disc, var_ct) %>%
summarize(n=count())
cts <- isolate_info %>%
mutate(var_ct=factor(ifelse(var_ct < 3, var_ct, '≥3'), levels = c(0,1,2,'≥3'))) %>%
group_by(colistin_disc, var_ct) %>%
summarize(n=count())
cts <- isolate_info %>%
mutate(var_ct=factor(ifelse(var_ct < 3, var_ct, '≥3'), levels = c(0,1,2,'≥3'))) %>%
group_by(colistin_disc, var_ct) %>%
summarize(n=n())
vcts <- isolate_info %>%
mutate(var_ct=factor(ifelse(var_ct < 3, var_ct, '≥3'), levels = c(0,1,2,'≥3'))) %>%
group_by(colistin_disc, var_ct) %>%
summarize(n=n())
vcts
vcts$n[x]/sum(vcts$n[vcts$colistin_disc == colistin_disc])
vcts$frac <- sapply(1:nrow(vcts), function(x){
colistin_disc <- vcts$colistin_disc[x]
vcts$n[x]/sum(vcts$n[vcts$colistin_disc == colistin_disc])
})
vcts
vcts %>% ggplot(aes(x = var_ct, y = frac, fill = colistin_disc))
vcts %>% ggplot(aes(x = var_ct, y = frac, fill = colistin_disc)) +
geom_bar(position=position_dodge2(preserve = "single"), color = 'white') +
geom_bar(position=position_dodge2(preserve = "single")) +
scale_fill_manual(values = adjustcolor(colors, alpha = 0.75),
labels = c('Resistant','Susceptible')) +
labs(x = 'Number of variants in resistance genes', y = 'Fraction of isolates', fill = 'Colistin')
vcts %>% ggplot(aes(x = var_ct, y = frac, fill = colistin_disc)) +
geom_col(position=position_dodge2(preserve = "single"), color = 'white') +
geom_col(position=position_dodge2(preserve = "single")) +
scale_fill_manual(values = adjustcolor(colors, alpha = 0.75),
labels = c('Resistant','Susceptible')) +
labs(x = 'Number of variants in resistance genes', y = 'Fraction of isolates', fill = 'Colistin')
f1a <- vcts %>% ggplot(aes(x = var_ct, y = frac, fill = colistin_disc)) +
geom_col(position=position_dodge2(preserve = "single"), color = 'white') +
geom_col(position=position_dodge2(preserve = "single")) +
scale_fill_manual(values = adjustcolor(colors, alpha = 0.75),
labels = c('Resistant','Susceptible')) +
labs(x = 'Number of variants in resistance genes', y = 'Fraction of isolates', fill = 'Colistin')
f1a
f1b <- isolate_info %>%
mutate(var_ct=factor(ifelse(var_ct < 3, var_ct, '≥3'), levels = c(0,1,2,'≥3')),
putative_r=site_type_putative_r,
putative_r=ifelse(putative_r %in% c('known','known_site','putative_r'), 'Canonical gene', putative_r),
putative_r=ifelse(putative_r %in% c('gwas_r'), 'Non-canonical gene', putative_r),
putative_r=ifelse(!putative_r %in% c('Canonical gene', 'Non-canonical gene'), 'Neither', putative_r),
putative_r=factor(putative_r, levels = c('Canonical gene','Non-canonical gene','Neither'))
) %>%
ggplot(aes(x = var_ct, y = colistin_mic)) +
geom_violin() +
geom_jitter(aes(shape = putative_r), alpha = 0.2, size = 2) + scale_shape_manual(values = c(19, 8, 1)) +
scale_y_continuous(trans = 'log2',
breaks = c(0.25, 0.5, 1, 2, 4, 8, 16, 32, 64),
labels = c('≤0.25', 0.5, 1, 2, 4, 8, 16, 32, '≥64')) +
stat_summary(fun=median, geom="point", size=4, shape =18, aes(col = colistin_disc)) +
#scale_color_manual(values=c('mediumpurple1')) +
scale_color_manual(values=colors,
labels=c('Resistant','Susceptible')) +
facet_grid(colistin_disc~., scales = 'free_y',labeller = as_labeller(c(R='Resistant',S='Susceptible'))) +
labs(x = 'Number of variants in resistance genes', y = 'Colistin MIC', shape = 'Putative resistance\nvariant in:', col = 'Median colistin MIC:')
f1b <- plot_panel_cols(f1b, adjustcolor(colors[c('R','S')],alpha.f = 0.75))
# f1c <- plot_panel_cols(f1c, colors[c('R','S')])
f1b
f1a
f1 <- plot_grid(plot_grid(f1a,NULL, rel_widths = c(9.3,1)), f1b, labels = 'AUTO', nrow = 2)
ggsave('figures/Fig1.png', f1, width = 7, height = 7)
f1
ggsave('figures/Fig1.png', f1, width = 7, height = 7)
f1 <- plot_grid(plot_grid(f1a,NULL, rel_widths = c(9.3,1)), f1b, labels = 'AUTO', nrow = 2)
ggsave('figures/Fig1.png', f1, width = 7, height = 7)
f1
genome_length <- 5394056 # KPNIH1 reference genome length
mutation_rate <- 1.03e-6 # from https://www.ncbi.nlm.nih.gov/pmc/articles/pmid/26196384/ (Fig. 3 legend)
scales <- c('time', 'relative')
times <- seq(0,10,1/12)
times <- times[times != 0]
thds <- lapply(scales, function(s){
thd_vals <- sapply(times, function(t){
thd(H = as.matrix(dists), t = t, m = genome_length, mu = mutation_rate, scale = s)
})
colnames(thd_vals) <- times
thd_vals
})
names(thds) <- scales
plotdat <- full_join(isolate_info, data.frame(thds$relative) %>% mutate(isolate_no = rownames(thds$relative))) %>% pivot_longer(cols = starts_with('X'), names_to = 'timescale', values_to = 'thd') %>%
mutate(timescale = gsub('X','',timescale),
kfoc_grps = paste(ifelse(kfoc_disrupted, 'disrupted', 'not disrupted'), '&', ifelse(kfoc_disrupted_clade, 'in clade', 'not in clade')))
thd_plotdat <- plotdat %>% filter(timescale %in% c(1) & !is.na(col_grp)) %>%
group_by(col_grp, timescale, kfoc_disrupted_clade) %>%
mutate(median_thd = median(thd),
median_thd = ifelse(col_grp == 'S non-revertant', median_thd, NA),
# timescale = replace(timescale, timescale == 1/12, '1 month'),
# timescale = replace(timescale, timescale == 1/4, '3 months'),
# timescale = replace(timescale, timescale == 1/2, '6 months'),
# timescale = replace(timescale, timescale == 1, '12 months'),
# timescale = factor(timescale, levels = c('1 month', '3 months', '6 months', '12 months')),
kfoc_disrupted_clade = ifelse(kfoc_disrupted_clade, 'Clade IIB', 'Other clades'),
grp = as.character(col_grp),
grp = ifelse(grp == 'R cluster', 'R', grp),
# grp = ifelse(grp == 'S revertant', 'S revertant', grp),
# grp = ifelse(grp == 'S non-revertant', 'S non-revertant', grp),
grp = ifelse(grp == 'R singleton', 'R', grp),
grp = factor(grp, levels = c('S non-revertant', 'R', 'S revertant'))
)
# thd_plotdat$col_grp
f3 <- thd_plotdat %>%
ggplot(aes(x = col_grp, y = thd, col = col_grp)) +
geom_violin(alpha = 0.5) +
geom_jitter(alpha = 0.4) +
facet_grid(~kfoc_disrupted_clade, scales = 'free') +
geom_hline(aes(yintercept = median_thd, group = paste(timescale, kfoc_disrupted_clade, col_grp), linetype = 'S non-revertant\nmedian THD'), col = 'darkgrey', size = 1) +
stat_summary(fun=median, geom="point", size=2, col = 'black') + scale_y_continuous(trans = 'log10') +
labs(x = '', y = 'THD', col = 'Resistance group', linetype = '') + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
scale_color_manual(values = grp_cols)
ggsave('figures/Fig3.png',f3, width = 7, height = 4)
f3
thd_plotdat
thd_plotdat %>%
ggplot(aes(x = col_grp, y = thd, col = col_grp)) +
geom_violin(alpha = 0.5) +
geom_jitter(alpha = 0.4) +
facet_grid(~kfoc_disrupted_clade, scales = 'free') +
geom_hline(aes(yintercept = median_thd, group = paste(timescale, kfoc_disrupted_clade, col_grp), linetype = 'S non-revertant\nmedian THD'), col = 'darkgrey', size = 1) +
stat_summary(fun=median, geom="point", size=2, col = 'black') + scale_y_continuous(trans = 'log10') +
labs(x = '', y = 'THD', col = 'Resistance group', linetype = '') + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
scale_color_manual(values = grp_cols)
thd_plotdat %>%
ggplot(aes(x = col_grp, y = thd, col = col_grp)) +
geom_violin(alpha = 0.5) +
geom_jitter(alpha = 0.4) +
facet_grid(colistin30~kfoc_disrupted_clade, scales = 'free') +
geom_hline(aes(yintercept = median_thd, group = paste(timescale, kfoc_disrupted_clade, col_grp), linetype = 'S non-revertant\nmedian THD'), col = 'darkgrey', size = 1) +
stat_summary(fun=median, geom="point", size=2, col = 'black') + scale_y_continuous(trans = 'log10') +
labs(x = '', y = 'THD', col = 'Resistance group', linetype = '') + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
scale_color_manual(values = grp_cols)
u
f3 <- thd_plotdat %>%
ggplot(aes(x = col_grp, y = thd, col = col_grp)) +
geom_violin(alpha = 0.5) +
geom_jitter(alpha = 0.4) +
facet_grid(~kfoc_disrupted_clade, scales = 'free') +
geom_hline(aes(yintercept = median_thd, group = paste(timescale, kfoc_disrupted_clade, col_grp), linetype = 'S non-revertant\nmedian THD'), col = 'darkgrey', size = 1) +
stat_summary(fun=median, geom="point", size=2, col = 'black') + scale_y_continuous(trans = 'log10') +
labs(x = '', y = 'THD', col = 'Resistance group', linetype = '') + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
scale_color_manual(values = grp_cols)
f3
isolate_info %>% group_by(colistin30, kfoc_disrupted_clade)
isolate_info %>% group_by(colistin30, kfoc_disrupted_clade) %>% summarize(count=n())
mean(isolate_info$colistin30 == 'yes' & isolate_info$kfoc_disrupted_clade)
warnings()
mean(isolate_info$colistin30 == 'yes' & isolate_info$kfoc_disrupted_clade)
mean(isolate_info$colistin30 == 'yes' & !isolate_info$kfoc_disrupted_clade)
isolate_info %>% group_by(colistin30, kfoc_disrupted_clade) %>% summarize(count=n())
sum(isolate_info$colistin30 == 'yes' & isolate_info$kfoc_disrupted_clade)
mean(isolate_info$colistin30 == 'yes' & isolate_info$kfoc_disrupted_clade)
sum(isolate_info$colistin30 == 'yes' & !isolate_info$kfoc_disrupted_clade)
mean(isolate_info$colistin30 == 'yes' & !isolate_info$kfoc_disrupted_clade)
sum(isolate_info$colistin30 == 'yes' & isolate_info$kfoc_disrupted_clade)
mean(isolate_info$colistin30 == 'yes' & isolate_info$kfoc_disrupted_clade)
sum(isolate_info$colistin30 == 'yes' & !isolate_info$kfoc_disrupted_clade)
mean(isolate_info$colistin30 == 'yes' & !isolate_info$kfoc_disrupted_clade)
table(isolate_info$colistin30, isolate_info$kfoc_disrupted_clade)
fisher.test(table(isolate_info$colistin30, isolate_info$kfoc_disrupted_clade)
)
fisher.test(table(isolate_info$colistin30, isolate_info$kfoc_disrupted_clade)
)```
fisher.test(table(isolate_info$colistin30, isolate_info$kfoc_disrupted_clade)
)
table(isolate_info$colistin30, isolate_info$kfoc_disrupted_clade)
fisher.test(table(isolate_info$colistin30, isolate_info$kfoc_disrupted_clade)
)
thd_plotdat <- plotdat %>% filter(timescale %in% c(1) & !is.na(col_grp) & colistin30 == 'no') %>%
group_by(col_grp, timescale, kfoc_disrupted_clade) %>%
mutate(median_thd = median(thd),
median_thd = ifelse(col_grp == 'S non-revertant', median_thd, NA),
kfoc_disrupted_clade = ifelse(kfoc_disrupted_clade, 'Clade IIB', 'Other clades'),
grp = as.character(col_grp),
grp = ifelse(grp == 'R cluster', 'R', grp),
grp = ifelse(grp == 'R singleton', 'R', grp),
grp = factor(grp, levels = c('S non-revertant', 'R', 'S revertant'))
)
f3 <- thd_plotdat %>%
ggplot(aes(x = col_grp, y = thd, col = col_grp)) +
geom_violin(alpha = 0.5) +
geom_jitter(alpha = 0.4) +
facet_grid(~kfoc_disrupted_clade, scales = 'free') +
geom_hline(aes(yintercept = median_thd, group = paste(timescale, kfoc_disrupted_clade, col_grp), linetype = 'S non-revertant\nmedian THD'), col = 'darkgrey', size = 1) +
stat_summary(fun=median, geom="point", size=2, col = 'black') + scale_y_continuous(trans = 'log10') +
labs(x = '', y = 'THD', col = 'Resistance group', linetype = '') + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
scale_color_manual(values = grp_cols)
ggsave('figures/Fig3.png',f3, width = 7, height = 4)
# ggsave('figures/Fig3.png',f3, width = 7, height = 4)
f3
thd_plotdat <- plotdat %>% filter(timescale %in% c(1) & !is.na(col_grp) & colistin30 == 'no') %>%
group_by(col_grp, timescale, kfoc_disrupted_clade) %>%
mutate(median_thd = median(thd),
median_thd = ifelse(col_grp == 'S non-revertant', median_thd, NA),
kfoc_disrupted_clade = ifelse(kfoc_disrupted_clade, 'Clade IIB', 'Other clades'),
grp = as.character(col_grp),
grp = ifelse(grp == 'R cluster', 'R', grp),
grp = ifelse(grp == 'R singleton', 'R', grp),
grp = factor(grp, levels = c('S non-revertant', 'R', 'S revertant'))
)
f3 <- thd_plotdat %>%
ggplot(aes(x = col_grp, y = thd, col = col_grp)) +
geom_violin(alpha = 0.5) +
geom_jitter(alpha = 0.4) +
facet_grid(~kfoc_disrupted_clade, scales = 'free') +
geom_hline(aes(yintercept = median_thd, group = paste(timescale, kfoc_disrupted_clade, col_grp), linetype = 'S non-revertant\nmedian THD'), col = 'darkgrey', size = 1) +
stat_summary(fun=median, geom="point", size=2, col = 'black') + scale_y_continuous(trans = 'log10') +
labs(x = '', y = 'THD', col = 'Resistance group', linetype = '') + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
scale_color_manual(values = grp_cols)
# ggsave('figures/Fig3.png',f3, width = 7, height = 4)
f3
thd_plotdat %>%
ggplot(aes(x = col_grp, y = thd, col = col_grp)) +
geom_violin(alpha = 0.5) +
geom_jitter(alpha = 0.4) +
facet_grid(colistin30~kfoc_disrupted_clade, scales = 'free') +
geom_hline(aes(yintercept = median_thd, group = paste(timescale, kfoc_disrupted_clade, col_grp), linetype = 'S non-revertant\nmedian THD'), col = 'darkgrey', size = 1) +
stat_summary(fun=median, geom="point", size=2, col = 'black') + scale_y_continuous(trans = 'log10') +
labs(x = '', y = 'THD', col = 'Resistance group', linetype = '') + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
scale_color_manual(values = grp_cols)
get_wtp <- function(timescale, grp1, grp2, kfoc_dc){
w1 <- thd_plotdat$thd[thd_plotdat$timescale == timescale & thd_plotdat$col_grp == grp1 & thd_plotdat$kfoc_disrupted_clade == kfoc_dc]
w2 <- thd_plotdat$thd[thd_plotdat$timescale == timescale & thd_plotdat$col_grp == grp2 & thd_plotdat$kfoc_disrupted_clade == kfoc_dc]
wtp <- NA
if(length(w1) > 0 & length(w2) > 1){
wtp <- wilcox.test(w1,w2)$p.value
}
wtp
}
clades <- unique(thd_plotdat$kfoc_disrupted_clade)
names(clades) <- clades
timescales <- as.character(unique(thd_plotdat$timescale))
names(timescales) <- as.character(timescales)
colgrps <- as.character(unique(thd_plotdat$col_grp))
names(colgrps) <- as.character(colgrps)
pvals <- lapply(timescales, function(t) {lapply(clades, function(c) {
sapply(colgrps, function(g1) {
sapply(colgrps, function(g2){
get_wtp(t, g1, g2, c)
})
}) %>% suppressWarnings()
pvals
thd_plotdat <- plotdat %>% filter(timescale %in% c(1) & !is.na(col_grp)) %>% # & colistin30 == 'no') %>%
group_by(col_grp, timescale, kfoc_disrupted_clade) %>%
mutate(median_thd = median(thd),
median_thd = ifelse(col_grp == 'S non-revertant', median_thd, NA),
kfoc_disrupted_clade = ifelse(kfoc_disrupted_clade, 'Clade IIB', 'Other clades'),
grp = as.character(col_grp),
grp = ifelse(grp == 'R cluster', 'R', grp),
grp = ifelse(grp == 'R singleton', 'R', grp),
grp = factor(grp, levels = c('S non-revertant', 'R', 'S revertant'))
)
f3 <- thd_plotdat %>%
ggplot(aes(x = col_grp, y = thd, col = col_grp)) +
geom_violin(alpha = 0.5) +
geom_jitter(alpha = 0.4) +
facet_grid(~kfoc_disrupted_clade, scales = 'free') +
geom_hline(aes(yintercept = median_thd, group = paste(timescale, kfoc_disrupted_clade, col_grp), linetype = 'S non-revertant\nmedian THD'), col = 'darkgrey', size = 1) +
stat_summary(fun=median, geom="point", size=2, col = 'black') + scale_y_continuous(trans = 'log10') +
labs(x = '', y = 'THD', col = 'Resistance group', linetype = '') + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
scale_color_manual(values = grp_cols)
# ggsave('figures/Fig3.png',f3, width = 7, height = 4)
f3
thd_plotdat %>%
ggplot(aes(x = col_grp, y = thd, col = col_grp)) +
geom_violin(alpha = 0.5) +
geom_jitter(alpha = 0.4) +
facet_grid(colistin30~kfoc_disrupted_clade, scales = 'free') +
geom_hline(aes(yintercept = median_thd, group = paste(timescale, kfoc_disrupted_clade, col_grp), linetype = 'S non-revertant\nmedian THD'), col = 'darkgrey', size = 1) +
stat_summary(fun=median, geom="point", size=2, col = 'black') + scale_y_continuous(trans = 'log10') +
labs(x = '', y = 'THD', col = 'Resistance group', linetype = '') + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
scale_color_manual(values = grp_cols)
thd_plotdat %>%
ggplot(aes(x = col_grp, y = thd, col = col_grp)) +
geom_violin(alpha = 0.5) +
geom_jitter(alpha = 0.4) +
facet_grid(colistin30~kfoc_disrupted_clade) +
geom_hline(aes(yintercept = median_thd, group = paste(timescale, kfoc_disrupted_clade, col_grp), linetype = 'S non-revertant\nmedian THD'), col = 'darkgrey', size = 1) +
stat_summary(fun=median, geom="point", size=2, col = 'black') + scale_y_continuous(trans = 'log10') +
labs(x = '', y = 'THD', col = 'Resistance group', linetype = '') +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
scale_color_manual(values = grp_cols)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ape)
library(cowplot)
library(ggtree)
library(thd)
library(exact2x2)
library(pheatmap)
library(ggplotify)
library(readxl)
theme_set(theme_bw() + theme(strip.background = element_rect(fill="white",linetype='blank'), text=element_text(size=15)))
# grob plotting function to plot panel colors
plot_panel_cols <- function(p, fills){
gt <- ggplot_gtable(ggplot_build(p))
strip_both <- which(grepl('strip-', gt$layout$name))
k <- 1
for (i in strip_both) {
j <- which(grepl('rect', gt$grobs[[i]]$grobs[[1]]$childrenOrder))
gt$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
as.ggplot(gt)
}
tr <- read.tree('../2021-02-17_gwas/data/trees/st258.tree')
dists <- read.delim('../2021-03-11_thd/data/st258_dists.tsv', sep = '\t')
isolate_info <- read_tsv('../2021-03-06_identifying-variants/data/isolate_info.tsv') %>% filter(!is.na(colistin_disc))
var_annots <- read_tsv('../2021-03-06_identifying-variants/data/known_variant_annots.tsv')
var_annots <- var_annots %>% mutate(gene = gsub('two-component system sensor histidine kinaseQ','q',gene),
gene = gsub('b$','B',gene),
gene = gsub('q$','Q',gene),
gene = gsub('p$','P',gene),
gene = gsub('a$','A' , gene),
gene = gsub('subunit IIB','',gene))
vars <- read.delim('../2021-03-06_identifying-variants/data/known_variants.tsv', header = FALSE)
varnames <- vars[1,1:ncol(vars)-1]
vars <- vars[2:nrow(vars),]
rownames(vars) <- vars[,1]
vars <- as.matrix(vars[,2:ncol(vars)])
class(vars) <- "numeric"
# Q: Should I use the 1st patient R isolate for all of these? That's what I'm doing now.
isolate_info <- isolate_info %>% arrange(colistin_disc, Cx_date) %>% filter(!duplicated(Patient_ID)) %>%
mutate(col_grp = gsub('_',' ',str_to_sentence(col_grp)),
col_grp = ifelse(col_grp %in% c('S novar','S other'),'S non-revertant',col_grp),
col_grp = factor(col_grp, levels = rev(c('S non-revertant', 'S revertant', 'R cluster', 'R singleton')))
#col_grp = factor(col_grp, levels = rev(c('S novar','S other', 'S revertant', 'R cluster', 'R singleton')))
)
# colors
colors <- c(R='lightcoral',S='lightblue')
# group colors
grp_cols <- c(colors['R'],
adjustcolor(colors['S'],offset = rep(-0.2,4)),
adjustcolor(colors[c('R')], offset = rep(0.2,4)),
colors['S'],
adjustcolor(colors['S'],offset = rep(-0.1,4)),
'lightgrey')
names(grp_cols) <- c('R cluster','S revertant','R singleton','S non-revertant', 'S novar', 'S other', 'No confidence')
f1a <- isolate_info %>%
mutate(var_ct=factor(ifelse(var_ct < 3, var_ct, '≥3'), levels = c(0,1,2,'≥3'))) %>%
ggplot(aes(x = var_ct, (..count..)/sum(..count..), fill = colistin_disc)) +
geom_bar(position=position_dodge2(preserve = "single"), color = 'white') +
geom_bar(position=position_dodge2(preserve = "single")) +
scale_fill_manual(values = adjustcolor(colors, alpha = 0.75),
labels = c('Resistant','Susceptible')) +
labs(x = 'Number of variants in resistance genes', y = 'Fraction of isolates', fill = 'Colistin')
f1a
# vcts <- isolate_info %>%
#        mutate(var_ct=factor(ifelse(var_ct < 3, var_ct, '≥3'), levels = c(0,1,2,'≥3'))) %>%
#   group_by(colistin_disc, var_ct) %>%
#   summarize(n=n())
#
# vcts$frac <- sapply(1:nrow(vcts), function(x){
#   colistin_disc <- vcts$colistin_disc[x]
#   vcts$n[x]/sum(vcts$n[vcts$colistin_disc == colistin_disc])
# })
#
# f1a <- vcts %>% ggplot(aes(x = var_ct, y = frac, fill = colistin_disc)) +
#   geom_col(position=position_dodge2(preserve = "single"), color = 'white') +
#   geom_col(position=position_dodge2(preserve = "single")) +
#   scale_fill_manual(values = adjustcolor(colors, alpha = 0.75),
#                     labels = c('Resistant','Susceptible')) +
#   labs(x = 'Number of variants in resistance genes', y = 'Fraction of isolates', fill = 'Colistin')
# f1a
f1b <- isolate_info %>%
mutate(var_ct=factor(ifelse(var_ct < 3, var_ct, '≥3'), levels = c(0,1,2,'≥3')),
putative_r=site_type_putative_r,
putative_r=ifelse(putative_r %in% c('known','known_site','putative_r'), 'Canonical gene', putative_r),
putative_r=ifelse(putative_r %in% c('gwas_r'), 'Non-canonical gene', putative_r),
putative_r=ifelse(!putative_r %in% c('Canonical gene', 'Non-canonical gene'), 'Neither', putative_r),
putative_r=factor(putative_r, levels = c('Canonical gene','Non-canonical gene','Neither'))
) %>%
ggplot(aes(x = var_ct, y = colistin_mic)) +
geom_violin() +
geom_jitter(aes(shape = putative_r), alpha = 0.2, size = 2) + scale_shape_manual(values = c(19, 8, 1)) +
scale_y_continuous(trans = 'log2',
breaks = c(0.25, 0.5, 1, 2, 4, 8, 16, 32, 64),
labels = c('≤0.25', 0.5, 1, 2, 4, 8, 16, 32, '≥64')) +
stat_summary(fun=median, geom="point", size=4, shape =18, aes(col = colistin_disc)) +
#scale_color_manual(values=c('mediumpurple1')) +
scale_color_manual(values=colors,
labels=c('Resistant','Susceptible')) +
facet_grid(colistin_disc~., scales = 'free_y',labeller = as_labeller(c(R='Resistant',S='Susceptible'))) +
labs(x = 'Number of variants in resistance genes', y = 'Colistin MIC', shape = 'Putative resistance\nvariant in:', col = 'Median colistin MIC:')
f1b <- plot_panel_cols(f1b, adjustcolor(colors[c('R','S')],alpha.f = 0.75))
# f1c <- plot_panel_cols(f1c, colors[c('R','S')])
f1b
f1 <- plot_grid(plot_grid(f1a,NULL, rel_widths = c(9.3,1)), f1b, labels = 'AUTO', nrow = 2)
ggsave('figures/Fig1.png', f1, width = 7, height = 7)
f1
ggtree::ggtree(ape::rtree(10))
packageVersion()
packageVersion('ggtree')
getwd()
source('~/.active-rstudio-document', echo=TRUE)
library(ggplot2)
source('~/.active-rstudio-document', echo=TRUE)
setwd('~/Desktop/regentrans/extras/')
ggtree::ggtree(ape::rtree(10))
ggtree(rtree(10))
ggtree(midpoint.root(rtree(10)))
library(devtools)
install_github("YuLab-SMU/ggtree")
source('~/.active-rstudio-document', echo=TRUE)
detach("package:ggtree", unload = TRUE)
library(ggtree)
ggtree(midpoint.root(rtree(10)))
