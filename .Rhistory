Penn_test_input <- readRDS(file = "/Users/sophiehoffman/Desktop/regentrans/data/Penn_test_input_2.rds")
locs <- Penn_test_input$locs
pt <- Penn_test_input$pt
fasta <- Penn_test_input$fasta
dists <- Penn_test_input$dists
tr <- Penn_test_input$tr
#dists - snv distance matrix returned by dist.dna
#use as.matrix = true for the dist.dna function
#dists_Penn <- dist.dna(x = fasta_Penn, as.matrix = TRUE, model = "N", pairwise.deletion = TRUE)
dists <- dist.dna(x = fasta, as.matrix = TRUE, model = "N", pairwise.deletion = TRUE)
library(ape)
library(dplyr)
library(devtools)
load_all()
#dists - snv distance matrix returned by dist.dna
#use as.matrix = true for the dist.dna function
#dists_Penn <- dist.dna(x = fasta_Penn, as.matrix = TRUE, model = "N", pairwise.deletion = TRUE)
dists <- dist.dna(x = fasta, as.matrix = TRUE, model = "N", pairwise.deletion = TRUE)
#make list
#Penn_test_input <- list("locs" = locs_sub, "pt" = pt_sub, "fasta" = fasta_sub, "dists" = dists)
Penn_test_input <- list("locs" = locs, "pt" = pt, "fasta" = fasta, "dists" = dists, "tr" = tr)
getwd()
setwd("/Users/sophiehoffman/Desktop/regentrans/data")
saveRDS(Penn_test_input, file = "Penn_test_input_3.rds")
#test read back in
Penn_test_input2 <- readRDS(file = "/Users/sophiehoffman/Desktop/regentrans/data/Penn_test_input_3.rds")
Penn_test_input2 <- readRDS(file = "/Users/sophiehoffman/Desktop/regentrans/data/Penn_test_input_3.rds")
locs2 <- Penn_test_input$locs
pt2 <- Penn_test_input$pt
fasta2 <- Penn_test_input$fasta
dists2 <- Penn_test_input$dists
tr2 <- Penn_test_input$tr
locs2 == locs
all(locs2 == locs)
all(pt2 == pt)
all(fasta2 == fasta)
all(dists2 == dists)
load_all()
document()
load_all()
load_data()
getwd
getwd()
setwd("../")
getwd()
load_all()
load_data()
library(devtools)
load_data()
load_data(regentrans)
devtools::load_data("regentrans")
devtools::load_data(pkg = "regentrans")
devtools::install_github('Snitkin-Lab-Umich/regentrans')
library(regentrans)
library(regentrans)
Penn_test_input <- readRDS(file = "/Users/sophiehoffman/Desktop/regentrans/data/Penn_test_input_2.rds")
locs <- Penn_test_input$locs
pt <- Penn_test_input$pt
fasta <- Penn_test_input$fasta
dists <- Penn_test_input$dists
tr <- Penn_test_input$tr
Penn_test_input <- readRDS(file = "/Users/sophiehoffman/Desktop/regentrans/data/Penn_test_input_3.rds")
locs <- Penn_test_input$locs
pt <- Penn_test_input$pt
fasta <- Penn_test_input$fasta
dists <- Penn_test_input$dists
tr <- Penn_test_input$tr
####save in RData file format
save(locs, file="/Users/sophiehoffman/Desktop/regentrans/data/locs.RData")
hi <- load("locs.RData")
hi <- load("/Users/sophiehoffman/Desktop/regentrans/data/locs.RData")
hi <- readRDS("/Users/sophiehoffman/Desktop/regentrans/data/locs.RData")
save(locs, file="/Users/sophiehoffman/Desktop/regentrans/data/locs.RData")
save(pt, file="/Users/sophiehoffman/Desktop/regentrans/data/pt.RData")
save(fasta, file="/Users/sophiehoffman/Desktop/regentrans/data/fasta.RData")
save(dists, file="/Users/sophiehoffman/Desktop/regentrans/data/dists.RData")
save(tr, file="/Users/sophiehoffman/Desktop/regentrans/data/tr.RData")
load_all()
force(dists)
force(fasta)
force(locs)
force(tr)
force(pt)
library(regentrans)
detach("package:regentrans", unload = TRUE)
test_locs <- locs[1:4]
devtools::install_github('Snitkin-Lab-Umich/regentrans')
library(regentrans)
get_snv_dists(dists, locs, pt)
locs
test_locs <- locs[1:4]
test_locs
test_pt <- pt[1:4]
test_pt
test_dists <- dists[names(test_locs), names(test_locs)]
test_dists
is.null(check_get_snv_dists_input_pt(test_dists, test_locs, test_pt))
is.null(check_get_snv_dists_input(test_dists, test_locs, test_pt))
source("/Users/sophiehoffman/Desktop/regentrans/R/checks.R")
is.null(check_get_snv_dists_input(test_dists, test_locs, test_pt))
is.null(check_get_snv_dists_input(test_dists, test_locs))
is.null(check_get_snv_dists_input(test_dists, test_locs, pt=NULL))
check_get_snv_dists_input(test_dists)
check_get_snv_dists_input(test_dists)
check_get_snv_dists_input(dists = test_dists)
check_get_snv_dists_input(locs = test_locs)
check_get_snv_dists_input(dists = test_dists, pt = test_pt)
check_get_snv_dists_input(dists = "test_dists", locs = test_locs)
check_get_snv_dists_input(dists = test_dists, locs = "test_locs")
check_get_snv_dists_input(dists = test_dists, locs = test_locs, pt = "test_pt")
check_get_snv_dists_input(dists = test_dists)
check_get_snv_dists_input(locs = test_locs)
check_get_snv_dists_input(dists = test_dists, pt = test_pt)
test_locs_2 <- locs[2:4]
test_locs_2 <- locs[5:8]
test_locs_2
check_get_snv_dists_input(dists = test_dists, locs = test_locs_2, pt = test_pt)
test_pt_2 <- pt[5:8]
test_pt_2
check_get_snv_dists_input(dists = test_dists, locs = test_locs, pt = test_pt_2)
test_locs_3 <- locs[1:3]
test_pt_3 <- pt[1:3]
test_dists <- dists[names(test_locs_3), names(test_locs_3)]
test_dists <- dists[names(test_locs), names(test_locs)]
test_dists_2 <- dists[names(test_locs_3), names(test_locs_3)]
check_get_snv_dists_input(dists = test_dists_2, locs = test_locs, pt = test_pt)
check_get_snv_dists_input(dists = test_dists, locs = test_locs_3, pt = test_pt)
check_get_snv_dists_input(dists = test_dists, locs = test_locs, pt = test_pt_3)
check_get_snv_dists_input(dists = test_dists_2, locs = test_locs, pt = test_pt)
test_snv_dists <- get_snv_dists(dists = test_dists, locs = test_locs, pt = test_pt)
test_snv_dists
test_locs_4 <- locs[1]
check_get_snv_dists_input(dists = test_dists, locs = test_locs_4, pt = test_pt)
check_get_frac_intra_input(snv_dists = test_snv_dists, threshs = seq(1,50,1), dists = NULL, locs = NULL, pt = NULL)
test_fasta <- fasta[names(test_locs), names(test_locs)]
test_fasta <- fasta[names(test_locs)]
test_fasta
test_fasta <- fasta[names(test_locs),]
test_fasta
check_get_frac_intra_input(snv_dists = NULL, threshs = seq(1,50,1), dists = test_dists, locs = test_locs, pt = test_pt)
check_get_frac_intra_input(snv_dists = "test_snv_dists", threshs = seq(1,50,1), dists = NULL, locs = NULL, pt = NULL)
test_snv_dists_2 <- test_snv_dists[,2:ncol(test_snv_dists)]
test_snv_dists_2
check_get_frac_intra_input(snv_dists = test_snv_dists_2, threshs = seq(1,50,1), dists = NULL, locs = NULL, pt = NULL)
test_snv_dists_3 <- test_snv_dists
colnames(test_snv_dists_3) <- c("A", "B", "C", "D", "E", "F", "G", "H")
View(test_snv_dists_3)
check_get_frac_intra_input(snv_dists = test_snv_dists_3, threshs = seq(1,50,1), dists = NULL, locs = NULL, pt = NULL)
test_snv_dists_4 <- test_snv_dists
View(test_snv_dists_4)
test_snv_dists_4$Pairwise_Dists <- as.character(test_snv_dists_4$Pairwise_Dists)
check_get_frac_intra_input(snv_dists = test_snv_dists_4, threshs = seq(1,50,1), dists = NULL, locs = NULL, pt = NULL)
check_get_frac_intra_input(snv_dists = NULL, threshs = seq(1,50,1), dists = "test_dists", locs = test_locs, pt = test_pt)
check_get_frac_intra_input(snv_dists = test_snv_dists, threshs = "seq(1,50,1)", dists = NULL, locs = NULL, pt = NULL)
names(test_pt)
test_tr <- keep.tip(tr,names(test_pt))
check_get_clusters_inputs(tr = test_tr, locs = test_locs, pureness = 1, bootstrap = NULL)
check_get_clusters_inputs(tr = "test_tr", locs = test_locs, pureness = 1, bootstrap = NULL)
check_get_clusters_inputs(tr = test_tr, locs = "test_locs", pureness = 1, bootstrap = NULL)
check_get_clusters_inputs(tr = test_tr, locs = test_locs, pureness = 100, bootstrap = NULL)
check_get_clusters_inputs(tr = test_tr, locs = test_locs, pureness = "100", bootstrap = NULL)
check_get_clusters_inputs(tr = test_tr, locs = test_locs, pureness = 1, bootstrap = "NULL")
check_get_clusters_inputs(tr = test_tr, locs = test_locs, pureness = 1, bootstrap = 105)
test_tr_2 <- keep.tip(tr,names(test_pt_3))
check_get_clusters_inputs(tr = test_tr_2, locs = test_locs, pureness = 1, bootstrap = NULL)
source("/Users/sophiehoffman/Desktop/regentrans/R/checks.R")
check_get_clusters_inputs(tr = test_tr_2, locs = test_locs, pureness = 1, bootstrap = NULL)
check_get_clusters_inputs(tr = test_tr, locs = test_locs_3, pureness = 1, bootstrap = NULL)
source("/Users/sophiehoffman/Desktop/regentrans/R/checks.R")
check_get_clusters_inputs(tr = test_tr_2, locs = test_locs, pureness = 1, bootstrap = NULL)
check_get_clusters_inputs(tr = test_tr, locs = test_locs_3, pureness = 1, bootstrap = NULL)
check_get_clusters_inputs(tr = test_tr, locs = test_locs_2, pureness = 1, bootstrap = NULL)
is.null(check_facility_fsp_input(fasta = test_fasta, locs = test_locs, form = "matrix"))
source("/Users/sophiehoffman/Desktop/regentrans/R/checks.R")
load_all()
is.null(check_facility_fsp_input(fasta = test_fasta, locs = test_locs, form = "matrix"))
